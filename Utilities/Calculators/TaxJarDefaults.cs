namespace RadialReview.Utilities.Calculators {
	public class TaxJarDefaults {

		public static TaxJarUtility.TaxJarTransformer GetDefault() {
			var t = new TaxJarUtility.TaxJarTransformer();

			t.AddCountry("usa", "us");
			t.AddCountry("united states", "us");
			t.AddCountry("unite states", "us");
			t.AddCountry("us", "us");
			t.AddCountry("spain", "es");
			t.AddCountry("espa±a", "es");
			t.AddCountry("new zealand", "nz");
			t.AddCountry("australia", "au");
			t.AddCountry("canada", "ca");
			t.AddCountry("mexico", "mx");
			t.AddCountry("nicaragua", "ni");
			t.AddCountry("u.s.a.", "us");
			t.AddCountry("ireland", "ie");


			t.AddCountry("AFG", "AF");
			t.AddCountry("ALA", "AX");
			t.AddCountry("ALB", "AL");
			t.AddCountry("DZA", "DZ");
			t.AddCountry("ASM", "AS");
			t.AddCountry("AND", "AD");
			t.AddCountry("AGO", "AO");
			t.AddCountry("AIA", "AI");
			t.AddCountry("ATA", "AQ");
			t.AddCountry("ATG", "AG");
			t.AddCountry("ARG", "AR");
			t.AddCountry("ARM", "AM");
			t.AddCountry("ABW", "AW");
			t.AddCountry("AUS", "AU");
			t.AddCountry("AUT", "AT");
			t.AddCountry("AZE", "AZ");
			t.AddCountry("BHS", "BS");
			t.AddCountry("BHR", "BH");
			t.AddCountry("BGD", "BD");
			t.AddCountry("BRB", "BB");
			t.AddCountry("BLR", "BY");
			t.AddCountry("BEL", "BE");
			t.AddCountry("BLZ", "BZ");
			t.AddCountry("BEN", "BJ");
			t.AddCountry("BMU", "BM");
			t.AddCountry("BTN", "BT");
			t.AddCountry("BOL", "BO");
			t.AddCountry("BES", "BQ");
			t.AddCountry("BIH", "BA");
			t.AddCountry("BWA", "BW");
			t.AddCountry("BVT", "BV");
			t.AddCountry("BRA", "BR");
			t.AddCountry("BA1", "B1");
			t.AddCountry("IOT", "IO");
			t.AddCountry("VGB", "VG");
			t.AddCountry("BRN", "BN");
			t.AddCountry("BGR", "BG");
			t.AddCountry("BFA", "BF");
			t.AddCountry("BDI", "BI");
			t.AddCountry("CPV", "CV");
			t.AddCountry("KHM", "KH");
			t.AddCountry("CMR", "CM");
			t.AddCountry("CAN", "CA");
			t.AddCountry("CYM", "KY");
			t.AddCountry("CAF", "CF");
			t.AddCountry("TCD", "TD");
			t.AddCountry("CHL", "CL");
			t.AddCountry("CHN", "CN");
			t.AddCountry("CXR", "CX");
			t.AddCountry("CCK", "CC");
			t.AddCountry("COL", "CO");
			t.AddCountry("COM", "KM");
			t.AddCountry("COG", "CG");
			t.AddCountry("COK", "CK");
			t.AddCountry("CRI", "CR");
			t.AddCountry("CIV", "CI");
			t.AddCountry("HRV", "HR");
			t.AddCountry("CUB", "CU");
			t.AddCountry("CUW", "CW");
			t.AddCountry("CYP", "CY");
			t.AddCountry("CZE", "CZ");
			t.AddCountry("DNK", "DK");
			t.AddCountry("DJI", "DJ");
			t.AddCountry("DMA", "DM");
			t.AddCountry("DOM", "DO");
			t.AddCountry("COD", "CD");
			t.AddCountry("ECU", "EC");
			t.AddCountry("EGY", "EG");
			t.AddCountry("SLV", "SV");
			t.AddCountry("GNQ", "GQ");
			t.AddCountry("ERI", "ER");
			t.AddCountry("EST", "EE");
			t.AddCountry("SWZ", "SZ");
			t.AddCountry("ETH", "ET");
			t.AddCountry("FRO", "FO");
			t.AddCountry("FLK", "FK");
			t.AddCountry("FJI", "FJ");
			t.AddCountry("FIN", "FI");
			t.AddCountry("FRA", "FR");
			t.AddCountry("GUF", "GF");
			t.AddCountry("PYF", "PF");
			t.AddCountry("ATF", "TF");
			t.AddCountry("GAB", "GA");
			t.AddCountry("GMB", "GM");
			t.AddCountry("GEO", "GE");
			t.AddCountry("DEU", "DE");
			t.AddCountry("GHA", "GH");
			t.AddCountry("GIB", "GI");
			t.AddCountry("GRC", "GR");
			t.AddCountry("GRL", "GL");
			t.AddCountry("GRD", "GD");
			t.AddCountry("GLP", "GP");
			t.AddCountry("GUM", "GU");
			t.AddCountry("GTM", "GT");
			t.AddCountry("GGY", "GG");
			t.AddCountry("GIN", "GN");
			t.AddCountry("GNB", "GW");
			t.AddCountry("GUY", "GY");
			t.AddCountry("HTI", "HT");
			t.AddCountry("HMD", "HM");
			t.AddCountry("HND", "HN");
			t.AddCountry("HKG", "HK");
			t.AddCountry("HUN", "HU");
			t.AddCountry("ISL", "IS");
			t.AddCountry("IND", "IN");
			t.AddCountry("IDN", "ID");
			t.AddCountry("IRN", "IR");
			t.AddCountry("IRQ", "IQ");
			t.AddCountry("IRL", "IE");
			t.AddCountry("IMN", "IM");
			t.AddCountry("ISR", "IL");
			t.AddCountry("ITA", "IT");
			t.AddCountry("JAM", "JM");
			t.AddCountry("JPN", "JP");
			t.AddCountry("JEY", "JE");
			t.AddCountry("JOR", "JO");
			t.AddCountry("KAZ", "KZ");
			t.AddCountry("KEN", "KE");
			t.AddCountry("KIR", "KI");
			t.AddCountry("XKX", "XK");
			t.AddCountry("KWT", "KW");
			t.AddCountry("KGZ", "KG");
			t.AddCountry("LAO", "LA");
			t.AddCountry("LVA", "LV");
			t.AddCountry("LBN", "LB");
			t.AddCountry("LSO", "LS");
			t.AddCountry("LBR", "LR");
			t.AddCountry("LBY", "LY");
			t.AddCountry("LIE", "LI");
			t.AddCountry("LTU", "LT");
			t.AddCountry("LUX", "LU");
			t.AddCountry("MAC", "MO");
			t.AddCountry("MKD", "MK");
			t.AddCountry("MDG", "MG");
			t.AddCountry("MWI", "MW");
			t.AddCountry("MYS", "MY");
			t.AddCountry("MDV", "MV");
			t.AddCountry("MLI", "ML");
			t.AddCountry("MLT", "MT");
			t.AddCountry("MHL", "MH");
			t.AddCountry("MTQ", "MQ");
			t.AddCountry("MRT", "MR");
			t.AddCountry("MUS", "MU");
			t.AddCountry("MYT", "YT");
			t.AddCountry("MEX", "MX");
			t.AddCountry("FSM", "FM");
			t.AddCountry("MDA", "MD");
			t.AddCountry("MCO", "MC");
			t.AddCountry("MNG", "MN");
			t.AddCountry("MNE", "ME");
			t.AddCountry("MSR", "MS");
			t.AddCountry("MAR", "MA");
			t.AddCountry("MOZ", "MZ");
			t.AddCountry("MMR", "MM");
			t.AddCountry("NAM", "NA");
			t.AddCountry("NRU", "NR");
			t.AddCountry("NPL", "NP");
			t.AddCountry("NLD", "NL");
			t.AddCountry("ANT", "AN");
			t.AddCountry("NCL", "NC");
			t.AddCountry("NZL", "NZ");
			t.AddCountry("NIC", "NI");
			t.AddCountry("NER", "NE");
			t.AddCountry("NGA", "NG");
			t.AddCountry("NIU", "NU");
			t.AddCountry("NFK", "NF");
			t.AddCountry("PRK", "KP");
			t.AddCountry("MNP", "MP");
			t.AddCountry("NOR", "NO");
			t.AddCountry("OMN", "OM");
			t.AddCountry("PAK", "PK");
			t.AddCountry("PLW", "PW");
			t.AddCountry("PSE", "PS");
			t.AddCountry("PAN", "PA");
			t.AddCountry("PNG", "PG");
			t.AddCountry("PRY", "PY");
			t.AddCountry("PER", "PE");
			t.AddCountry("PHL", "PH");
			t.AddCountry("PCN", "PN");
			t.AddCountry("POL", "PL");
			t.AddCountry("PRT", "PT");
			t.AddCountry("PRI", "PR");
			t.AddCountry("QAT", "QA");
			t.AddCountry("REU", "RE");
			t.AddCountry("ROU", "RO");
			t.AddCountry("RUS", "RU");
			t.AddCountry("RWA", "RW");
			t.AddCountry("MAF", "MF");
			t.AddCountry("WSM", "WS");
			t.AddCountry("SMR", "SM");
			t.AddCountry("STP", "ST");
			t.AddCountry("SAU", "SA");
			t.AddCountry("SEN", "SN");
			t.AddCountry("SRB", "RS");
			t.AddCountry("SYC", "SC");
			t.AddCountry("SLE", "SL");
			t.AddCountry("SGP", "SG");
			t.AddCountry("SXM", "SX");
			t.AddCountry("SVK", "SK");
			t.AddCountry("SVN", "SI");
			t.AddCountry("SLB", "SB");
			t.AddCountry("SOM", "SO");
			t.AddCountry("ZAF", "ZA");
			t.AddCountry("SGS", "GS");
			t.AddCountry("KOR", "KR");
			t.AddCountry("SSD", "SS");
			t.AddCountry("SUN", "SU");
			t.AddCountry("ESP", "ES");
			t.AddCountry("LKA", "LK");
			t.AddCountry("BLM", "BL");
			t.AddCountry("SHN", "SH");
			t.AddCountry("KNA", "KN");
			t.AddCountry("LCA", "LC");
			t.AddCountry("SPM", "PM");
			t.AddCountry("VCT", "VC");
			t.AddCountry("SDN", "SD");
			t.AddCountry("SUR", "SR");
			t.AddCountry("SJM", "SJ");
			t.AddCountry("SWE", "SE");
			t.AddCountry("CHE", "CH");
			t.AddCountry("SYR", "SY");
			t.AddCountry("TWN", "TW");
			t.AddCountry("TJK", "TJ");
			t.AddCountry("TZA", "TZ");
			t.AddCountry("THA", "TH");
			t.AddCountry("TLS", "TL");
			t.AddCountry("TGO", "TG");
			t.AddCountry("TKL", "TK");
			t.AddCountry("TON", "TO");
			t.AddCountry("TTO", "TT");
			t.AddCountry("TUN", "TN");
			t.AddCountry("TUR", "TR");
			t.AddCountry("TKM", "TM");
			t.AddCountry("TCA", "TC");
			t.AddCountry("TUV", "TV");
			t.AddCountry("UGA", "UG");
			t.AddCountry("UKR", "UA");
			t.AddCountry("ARE", "AE");
			t.AddCountry("GBR", "GB");
			t.AddCountry("USA", "US");
			t.AddCountry("UMI", "UM");
			t.AddCountry("VIR", "VI");
			t.AddCountry("URY", "UY");
			t.AddCountry("UZB", "UZ");
			t.AddCountry("VUT", "VU");
			t.AddCountry("VAT", "VA");
			t.AddCountry("VEN", "VE");
			t.AddCountry("VNM", "VN");
			t.AddCountry("WLF", "WF");
			t.AddCountry("ESH", "EH");
			t.AddCountry("YEM", "YE");
			t.AddCountry("ZMB", "ZM");



			t.AddCountry("Afghanistan", "AF");
			t.AddCountry("Aland Islands", "AX");
			t.AddCountry("Åland Islands", "AX");
			t.AddCountry("Albania", "AL");
			t.AddCountry("Algeria", "DZ");
			t.AddCountry("American Samoa", "AS");
			t.AddCountry("Andorra", "AD");
			t.AddCountry("Angola", "AO");
			t.AddCountry("Anguilla", "AI");
			t.AddCountry("Antarctica", "AQ");
			t.AddCountry("Antigua and Barbuda", "AG");
			t.AddCountry("Argentina", "AR");
			t.AddCountry("Armenia", "AM");
			t.AddCountry("Aruba", "AW");
			t.AddCountry("Australia", "AU");
			t.AddCountry("Austria", "AT");
			t.AddCountry("Azerbaijan", "AZ");
			t.AddCountry("Bahamas", "BS");
			t.AddCountry("Bahrain", "BH");
			t.AddCountry("Bangladesh", "BD");
			t.AddCountry("Barbados", "BB");
			t.AddCountry("Belarus", "BY");
			t.AddCountry("Belgium", "BE");
			t.AddCountry("Belize", "BZ");
			t.AddCountry("Benin", "BJ");
			t.AddCountry("Bermuda", "BM");
			t.AddCountry("Bhutan", "BT");
			t.AddCountry("Bolivia (Plurinational State of)", "BO");
			t.AddCountry("Bolivia", "BO");
			t.AddCountry("Bonaire, Saint Eustatius and Saba", "BQ");
			t.AddCountry("Bonaire, Sint Eustatius and Saba", "BQ");
			t.AddCountry("Bosnia and Herzegovina", "BA");
			t.AddCountry("Botswana", "BW");
			t.AddCountry("Bouvet Island", "BV");
			t.AddCountry("Brazil", "BR");
			t.AddCountry("British Antarctic Territories", "B1");
			t.AddCountry("British Indian Ocean Territory", "IO");
			t.AddCountry("British Virgin Islands", "VG");
			t.AddCountry("Brunei Darussalam", "BN");
			t.AddCountry("Bulgaria", "BG");
			t.AddCountry("Burkina Faso", "BF");
			t.AddCountry("Burundi", "BI");
			t.AddCountry("Cabo Verde", "CV");
			t.AddCountry("Cambodia", "KH");
			t.AddCountry("Cameroon", "CM");
			t.AddCountry("Canada", "CA");
			t.AddCountry("Cayman Islands", "KY");
			t.AddCountry("Central African Republic", "CF");
			t.AddCountry("Chad", "TD");
			t.AddCountry("Chile", "CL");
			t.AddCountry("China", "CN");
			t.AddCountry("Christmas Island", "CX");
			t.AddCountry("Cocos (Keeling) Islands", "CC");
			t.AddCountry("Colombia", "CO");
			t.AddCountry("Comoros", "KM");
			t.AddCountry("Congo Republic", "CG");
			t.AddCountry("Congo", "CG");
			t.AddCountry("Congo, Democratic Republic of the", "CD");
			t.AddCountry("Cook Islands", "CK");
			t.AddCountry("Costa Rica", "CR");
			t.AddCountry("Cote d'Ivoire", "CI");
			t.AddCountry("Côte d'Ivoire", "CI");
			t.AddCountry("Croatia", "HR");
			t.AddCountry("Cuba", "CU");
			t.AddCountry("Curacao", "CW");
			t.AddCountry("Curaçao", "CW");
			t.AddCountry("Cyprus", "CY");
			t.AddCountry("Czech Republic", "CZ");
			t.AddCountry("Czechia", "CZ");
			t.AddCountry("Denmark", "DK");
			t.AddCountry("Djibouti", "DJ");
			t.AddCountry("Dominica", "DM");
			t.AddCountry("Dominican Republic", "DO");
			t.AddCountry("DR Congo", "CD");
			t.AddCountry("Ecuador", "EC");
			t.AddCountry("Egypt", "EG");
			t.AddCountry("El Salvador", "SV");
			t.AddCountry("Equatorial Guinea", "GQ");
			t.AddCountry("Eritrea", "ER");
			t.AddCountry("Estonia", "EE");
			t.AddCountry("Eswatini", "SZ");
			t.AddCountry("Ethiopia", "ET");
			t.AddCountry("Faeroe Islands", "FO");
			t.AddCountry("Falkland Islands (Malvinas)", "FK");
			t.AddCountry("Falkland Islands", "FK");
			t.AddCountry("Faroe Islands", "FO");
			t.AddCountry("Fiji", "FJ");
			t.AddCountry("Finland", "FI");
			t.AddCountry("France", "FR");
			t.AddCountry("French Guiana", "GF");
			t.AddCountry("French Polynesia", "PF");
			t.AddCountry("French Southern Territories", "TF");
			t.AddCountry("Gabon", "GA");
			t.AddCountry("Gambia", "GM");
			t.AddCountry("Georgia", "GE");
			t.AddCountry("Germany", "DE");
			t.AddCountry("Ghana", "GH");
			t.AddCountry("Gibraltar", "GI");
			t.AddCountry("Greece", "GR");
			t.AddCountry("Greenland", "GL");
			t.AddCountry("Grenada", "GD");
			t.AddCountry("Guadeloupe", "GP");
			t.AddCountry("Guam", "GU");
			t.AddCountry("Guatemala", "GT");
			t.AddCountry("Guernsey", "GG");
			t.AddCountry("Guinea", "GN");
			t.AddCountry("Guinea-Bissau", "GW");
			t.AddCountry("Guyana", "GY");
			t.AddCountry("Haiti", "HT");
			t.AddCountry("Heard and McDonald Islands", "HM");
			t.AddCountry("Heard Island and McDonald Islands", "HM");
			t.AddCountry("Holy See", "VA");
			t.AddCountry("Honduras", "HN");
			t.AddCountry("Hong Kong", "HK");
			t.AddCountry("Hungary", "HU");
			t.AddCountry("Iceland", "IS");
			t.AddCountry("India", "IN");
			t.AddCountry("Indonesia", "ID");
			t.AddCountry("Iran (Islamic Republic of)", "IR");
			t.AddCountry("Iran", "IR");
			t.AddCountry("Iraq", "IQ");
			t.AddCountry("Ireland", "IE");
			t.AddCountry("Isle of Man", "IM");
			t.AddCountry("Israel", "IL");
			t.AddCountry("Italy", "IT");
			t.AddCountry("Jamaica", "JM");
			t.AddCountry("Japan", "JP");
			t.AddCountry("Jersey", "JE");
			t.AddCountry("Jordan", "JO");
			t.AddCountry("Kazakhstan", "KZ");
			t.AddCountry("Kenya", "KE");
			t.AddCountry("Kiribati", "KI");
			t.AddCountry("Korea (Democratic People's Republic of)", "KP");
			t.AddCountry("Korea, Republic of", "KR");
			t.AddCountry("Kosovo", "XK");
			t.AddCountry("Kuwait", "KW");
			t.AddCountry("Kyrgyz Republic", "KG");
			t.AddCountry("Kyrgyzstan", "KG");
			t.AddCountry("Lao People's Democratic Republic", "LA");
			t.AddCountry("Laos", "LA");
			t.AddCountry("Latvia", "LV");
			t.AddCountry("Lebanon", "LB");
			t.AddCountry("Lesotho", "LS");
			t.AddCountry("Liberia", "LR");
			t.AddCountry("Libya", "LY");
			t.AddCountry("Liechtenstein", "LI");
			t.AddCountry("Lithuania", "LT");
			t.AddCountry("Luxembourg", "LU");
			t.AddCountry("Macao", "MO");
			t.AddCountry("Macau", "MO");
			t.AddCountry("Macedonia", "MK");
			t.AddCountry("Madagascar", "MG");
			t.AddCountry("Malawi", "MW");
			t.AddCountry("Malaysia", "MY");
			t.AddCountry("Maldives", "MV");
			t.AddCountry("Mali", "ML");
			t.AddCountry("Malta", "MT");
			t.AddCountry("Marshall Islands", "MH");
			t.AddCountry("Martinique", "MQ");
			t.AddCountry("Mauritania", "MR");
			t.AddCountry("Mauritius", "MU");
			t.AddCountry("Mayotte", "YT");
			t.AddCountry("Mexico", "MX");
			t.AddCountry("Micronesia (Federated States of)", "FM");
			t.AddCountry("Micronesia, Fed. Sts.", "FM");
			t.AddCountry("Moldova", "MD");
			t.AddCountry("Moldova, Republic of", "MD");
			t.AddCountry("Monaco", "MC");
			t.AddCountry("Mongolia", "MN");
			t.AddCountry("Montenegro", "ME");
			t.AddCountry("Montserrat", "MS");
			t.AddCountry("Morocco", "MA");
			t.AddCountry("Mozambique", "MZ");
			t.AddCountry("Myanmar", "MM");
			t.AddCountry("Namibia", "NA");
			t.AddCountry("Nauru", "NR");
			t.AddCountry("Nepal", "NP");
			t.AddCountry("Netherlands Antilles", "AN");
			t.AddCountry("Netherlands", "NL");
			t.AddCountry("New Caledonia", "NC");
			t.AddCountry("New Zealand", "NZ");
			t.AddCountry("Nicaragua", "NI");
			t.AddCountry("Niger", "NE");
			t.AddCountry("Nigeria", "NG");
			t.AddCountry("Niue", "NU");
			t.AddCountry("Norfolk Island", "NF");
			t.AddCountry("North Korea", "KP");
			t.AddCountry("North Macedonia", "MK");
			t.AddCountry("Northern Mariana Islands", "MP");
			t.AddCountry("Norway", "NO");
			t.AddCountry("Oman", "OM");
			t.AddCountry("Pakistan", "PK");
			t.AddCountry("Palau", "PW");
			t.AddCountry("Palestine", "PS");
			t.AddCountry("Palestine, State of", "PS");
			t.AddCountry("Panama", "PA");
			t.AddCountry("Papua New Guinea", "PG");
			t.AddCountry("Paraguay", "PY");
			t.AddCountry("Peru", "PE");
			t.AddCountry("Philippines", "PH");
			t.AddCountry("Pitcairn", "PN");
			t.AddCountry("Poland", "PL");
			t.AddCountry("Portugal", "PT");
			t.AddCountry("Puerto Rico", "PR");
			t.AddCountry("Qatar", "QA");
			t.AddCountry("Reunion", "RE");
			t.AddCountry("Réunion", "RE");
			t.AddCountry("Romania", "RO");
			t.AddCountry("Russia", "RU");
			t.AddCountry("Russian Federation", "RU");
			t.AddCountry("Rwanda", "RW");
			t.AddCountry("Saint Barthélemy", "BL");
			t.AddCountry("Saint Helena, Ascension and Tristan da Cunha", "SH");
			t.AddCountry("Saint Kitts and Nevis", "KN");
			t.AddCountry("Saint Lucia", "LC");
			t.AddCountry("Saint Martin (French part)", "MF");
			t.AddCountry("Saint Pierre and Miquelon", "PM");
			t.AddCountry("Saint Vincent and the Grenadines", "VC");
			t.AddCountry("Saint-Martin", "MF");
			t.AddCountry("Samoa", "WS");
			t.AddCountry("San Marino", "SM");
			t.AddCountry("Sao Tome and Principe", "ST");
			t.AddCountry("Saudi Arabia", "SA");
			t.AddCountry("Senegal", "SN");
			t.AddCountry("Serbia", "RS");
			t.AddCountry("Seychelles", "SC");
			t.AddCountry("Sierra Leone", "SL");
			t.AddCountry("Singapore", "SG");
			t.AddCountry("Sint Maarten (Dutch part)", "SX");
			t.AddCountry("Sint Maarten", "SX");
			t.AddCountry("Slovakia", "SK");
			t.AddCountry("Slovenia", "SI");
			t.AddCountry("Solomon Islands", "SB");
			t.AddCountry("Somalia", "SO");
			t.AddCountry("South Africa", "ZA");
			t.AddCountry("South Georgia and South Sandwich Is.", "GS");
			t.AddCountry("South Georgia and the South Sandwich Islands", "GS");
			t.AddCountry("South Korea", "KR");
			t.AddCountry("South Sudan", "SS");
			t.AddCountry("Soviet Union (former)", "SU");
			t.AddCountry("Spain", "ES");
			t.AddCountry("Sri Lanka", "LK");
			t.AddCountry("St. Barths", "BL");
			t.AddCountry("St. Helena", "SH");
			t.AddCountry("St. Kitts and Nevis", "KN");
			t.AddCountry("St. Lucia", "LC");
			t.AddCountry("St. Pierre and Miquelon", "PM");
			t.AddCountry("St. Vincent and the Grenadines", "VC");
			t.AddCountry("Sudan", "SD");
			t.AddCountry("Suriname", "SR");
			t.AddCountry("Svalbard and Jan Mayen Islands", "SJ");
			t.AddCountry("Svalbard and Jan Mayen", "SJ");
			t.AddCountry("Sweden", "SE");
			t.AddCountry("Switzerland", "CH");
			t.AddCountry("Syria", "SY");
			t.AddCountry("Syrian Arab Republic", "SY");
			t.AddCountry("Taiwan", "TW");
			t.AddCountry("Taiwan, Province of China", "TW");
			t.AddCountry("Tajikistan", "TJ");
			t.AddCountry("Tanzania", "TZ");
			t.AddCountry("Tanzania, United Republic of", "TZ");
			t.AddCountry("Thailand", "TH");
			t.AddCountry("Timor-Leste", "TL");
			t.AddCountry("Togo", "TG");
			t.AddCountry("Tokelau", "TK");
			t.AddCountry("Tonga", "TO");
			t.AddCountry("Trinidad and Tobago", "TT");
			t.AddCountry("Tunisia", "TN");
			t.AddCountry("Turkey", "TR");
			t.AddCountry("Turkmenistan", "TM");
			t.AddCountry("Turks and Caicos Islands", "TC");
			t.AddCountry("Tuvalu", "TV");
			t.AddCountry("Uganda", "UG");
			t.AddCountry("Ukraine", "UA");
			t.AddCountry("United Arab Emirates", "AE");
			t.AddCountry("United Kingdom of Great Britain and Northern Ireland", "GB");
			t.AddCountry("United Kingdom", "GB");
			t.AddCountry("United States Minor Outlying Islands", "UM");
			t.AddCountry("United States of America", "US");
			t.AddCountry("United States Virgin Islands", "VI");
			t.AddCountry("United States", "US");
			t.AddCountry("Uruguay", "UY");
			t.AddCountry("Uzbekistan", "UZ");
			t.AddCountry("Vanuatu", "VU");
			t.AddCountry("Vatican", "VA");
			t.AddCountry("Venezuela (Bolivarian Republic of)", "VE");
			t.AddCountry("Venezuela", "VE");
			t.AddCountry("Viet Nam", "VN");
			t.AddCountry("Vietnam", "VN");
			t.AddCountry("Virgin Islands (British)", "VG");
			t.AddCountry("Virgin Islands (U.S.)", "VI");
			t.AddCountry("Wallis and Futuna Islands", "WF");
			t.AddCountry("Wallis and Futuna", "WF");
			t.AddCountry("Western Sahara", "EH");
			t.AddCountry("Yemen", "YE");
			t.AddCountry("Zambia", "ZM");
			t.AddCountry("Zimbabwe", "ZW");


			//Added to match CountryCode dropdown helper
			t.AddCountry("Virgin Islands, British", "VG");
			t.AddCountry("Virgin Islands, U.S.", "VI");
			t.AddCountry("Swaziland", "SZ");
			t.AddCountry("Saint Helena", "SH");
			t.AddCountry("Palestinian Territory, Occupied", "PS");
			t.AddCountry("Micronesia, Federated States of", "FM");
			t.AddCountry("Macedonia, The Former Yugoslav Republic of", "MK");
			t.AddCountry("Libyan Arab Jamahiriya", "LY");
			t.AddCountry("Micronesia, Federated States of", "FM");
			t.AddCountry("Korea, Democratic People's Republic of", "KP");
			t.AddCountry("Iran, Islamic Republic of", "IR");
			t.AddCountry("Holy See (Vatican City State)", "VA");
			t.AddCountry("Congo, The Democratic Republic of The", "CD");

			t.AddCountry("Cape Verde", "CV");

			return t;
		}


	}
}

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RadialReview.Core</name>
    </assembly>
    <members>
        <member name="T:RadialReview.Accessors.AccountabilityAccessor.UserCacheUpdater">
            <summary>
            Surround a session with the UserCacheUpdater. It will update the user's cache afterward during the dispose sequence.
            </summary>
        </member>
        <member name="P:RadialReview.Accessors.ArchiveAccessor.ArchiveVM.UndeleteUrl">
            <summary>
            {0} is replaced by the Id
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.BaseAccessor.ReorderingRecurrence`1.ApplyReorder(RadialReview.Utilities.RealTime.RealTimeUtility,NHibernate.ISession,System.Func{System.Object,System.Int32,`0,RadialReview.Models.Angular.Base.IAngularId})">
            <summary>
            </summary>
            <param name="rt"></param>
            <param name="s"></param>
            <param name="ConstructAngularObject"> [Id,Order, new AngularItem(Id){Ordering=order}]</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.DeepAccessor.Users.ManagesUser(NHibernate.ISession,RadialReview.Utilities.PermissionsUtility,System.Int64,System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="perms"></param>
            <param name="managerUserId"></param>
            <param name="subordinateUserId"></param>
            <param name="allowDeletedSubordinateUser">for viewing user details page</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.DeepAccessor.Unsafe.Criterions.SelectNodeIdsGivenUser_Unsafe(System.Int64,System.Boolean)">
            <summary>
            Gets the node ids for a given user
            Confirms the user, node, and link are alive
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.DeepAccessor.Unsafe.Criterions.SelectDirectChildNodeIdsGivenParentNode_Unsafe(System.Int64)">
            <summary>
            Gets the (alive) node ids for the direct reports of a particular node
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.DeepAccessor.Unsafe.Criterions.SelectDeepSubordinateNodeIdsGivenParentNodes_Unsafe``1(NHibernate.Criterion.QueryOver{``0})">
            <summary>
            Gets the (alive) node ids for the direct reports of a particular node
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.DeepAccessor.Unsafe.Criterions.SelectUserIdsGivenNodes_Unsafe``1(NHibernate.Criterion.QueryOver{``0},System.Nullable{System.Int64})">
            <summary>
            Get user ids for a set of node ids
            </summary>
            <typeparam name="U"></typeparam>
            <param name="nodeIds"></param>
            <param name="alsoIncludeNodeId"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.DocumentsAccessor.GetCoachingTemplateFolder(RadialReview.Models.UserOrganizationModel,System.Int64)">
            <summary>
            Only coaches have a coaching template folder
            </summary>
            <param name="caller"></param>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.DocumentsAccessor.ForceInitializeMainOrganizationFolder_Unsafe(NHibernate.ISession,System.Int64)">
            <summary>
            This method is grossly unsafe. I'm only allowing it because it doesnt return anything.
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.EmailResult.ToResults(System.String)">
             <summary>
            
             </summary>
             <param name="successMessage">
                 {0} = Sent,<br/>
                 {1} = Unsent,<br/>
                 {2} = Total,<br/>
                 {3} = TimeTaken(InSeconds),<br/>
                 </param>
             <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.Emailer.ReplaceLink(System.String,System.Boolean)">
            <summary>
            Display's a link with or without query parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.IssuesAccessor.ResetPriorityByRank(RadialReview.Models.UserOrganizationModel,System.Int64)">
             <summary>
             This function should create a single query to update the rank property, something like:
             string hql = "UPDATE Issue SET Rank = 0 WHERE MeetingId = :MeetingId";
            
            but to keep the SignalR functionality, it was done like this 
             </summary>
             <param name="caller"></param>
             <param name="meetingId"></param>
             <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.IssuesAccessor.BuildEditIssueExecutor(System.Int64,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{RadialReview.Accessors.IssuesAccessor.IssueCompartment},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            SyncAction.UpdateIssueMessage(issue.Issue.Id)
            </summary>
            <param name="issueRecurrenceId"></param>
            <param name="message"></param>
            <param name="complete"></param>
            <param name="owner"></param>
            <param name="priority"></param>
            <param name="rank"></param>
            <param name="awaitingSolve"></param>
            <param name="now"></param>
            <param name="status"></param>
            <param name="noteId"></param>
            <param name="archived"></param>
            <param name="stars"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.L10Accessor.SetSharedVTOVision(NHibernate.ISession,RadialReview.Utilities.PermissionsUtility,System.Int64,System.Int64)">
            <summary>
            Use recurrenceId=0 to unset
            </summary>
            <param name="s"></param>
            <param name="perms"></param>
            <param name="organizationId"></param>
            <param name="recurrenceId"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.L10Accessor.GetVisibleL10Meetings_Tiny(RadialReview.Models.UserOrganizationModel,System.Int64,System.Boolean,System.Boolean,System.Nullable{RadialReview.Models.L10.L10TeamType})">
            <summary>
            Consider if you want to use GetViewableL10Meetings, as this is faster...
            WARNING: Don't be fooled, this returns RECURRANCE ids, not Meeting Ids.
            Which is actually helpful, as long as you know what you're getting back.
            </summary>
            <param name="caller"></param>
            <param name="userId"></param>
            <param name="onlyPersonallyAttending"></param>
            <param name="onlyDashboardRecurrences"></param>
            <param name="teamTypeFilter"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.Old.Old.DeepAccessor.Users.ManagesUser(NHibernate.ISession,RadialReview.Utilities.PermissionsUtility,System.Int64,System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="perms"></param>
            <param name="managerId"></param>
            <param name="subordinateId"></param>
            <param name="allowDeletedSubordinateUser">for viewing user details page</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.PaymentAccessor.ShowDelinquent(RadialReview.Models.UserOrganizationModel,System.Int64,System.Int32)">
            <summary>
            Returns true if delinquent by certain number of days
            </summary>
            <param name="caller"></param>
            <param name="orgId"></param>
            <param name="daysOverdue"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.PaymentAccessor.Unsafe.ChargeOrganizationData.#ctor(System.Int64,System.Int64,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Decimal,RadialReview.Utilities.Calculators.ValidTaxLocation,System.Boolean)">
            <summary>
            subtotal should include any discounts
            </summary>
        </member>
        <member name="P:RadialReview.Accessors.PaymentAccessor.Unsafe.ChargeOrganizationData.DiscountAlreadyApplied">
            <summary>
            Subtotal should include discounts. This fields is purely informational
            </summary>
        </member>
        <member name="P:RadialReview.Accessors.Dedup.PredupWithPrices">
             <summary>
             For ordering the users in such a way as to maximize amount charged for joint accounts..
            
             Algorithm is to make a list of users, order by the sum of what they'd be charged (if not for free seats)
             orgs = organizations ordered by per-seat price, descending
             for each org in orgs
               list1 = seenNotFree seats ordered by user-charge list desending
               list2 = notSeenOrFree seats order by user-charge list desending
               list = list1 + list2
            
               Apply free seats to first N users
               charge for all SeenNotFree seats
               mark all SeenNotFree seats
             
             </summary>
        </member>
        <member name="M:RadialReview.Accessors.PDF.AC.AccountabilityChartPdfUtility.DistinctRoots(System.Collections.Generic.List{RadialReview.Models.Angular.Accountability.AngularAccountabilityNode},System.Collections.Generic.Dictionary{System.Int64,System.Collections.Generic.List{System.Int64}})">
            <summary>
            Test if the roots are part of any other requiredTogether groups.
            </summary>
        </member>
        <member name="T:RadialReview.Accessors.PDF.Generators.OldVtoPdfPageGenerator">
            <summary>
            DO NOT USE THIS ONE
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.PermissionsAccessor.GetExplicitPermItemsForUser(NHibernate.ISession,RadialReview.Utilities.PermissionsUtility,System.Int64,RadialReview.Models.PermItem.ResourceType)">
            <summary>
            Only grabs perm items for explicitly specified permissions (No Creator, Admin, Members)
            </summary>
            <param name="s"></param>
            <param name="callerPerms"></param>
            <param name="forUserId"></param>
            <param name="resourceType"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Accessors.ReferralAccessor.ReferralEmail">
            <summary>
            Do not edit
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.SimpleAnswerLookup.GetNumberReviewed_ByUser(System.Int64)">
            <summary>
            Gets the number of people this person started reviewing
            </summary>
            <param name="byUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.SimpleAnswerLookup.GetNumberReviewees_AboutUser(System.Int64)">
            <summary>
            Gets the number of people reviewed by this person
            </summary>
            <param name="byUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.RockAccessor.UpdateRock(RadialReview.Utilities.NHibernate.IOrderedSession,RadialReview.Utilities.PermissionsUtility,System.Int64,System.String,System.Nullable{System.Int64},System.Nullable{RadialReview.Models.Enums.RockState},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
             <summary>
             SyncAction.UpdateRockCompletion(rockId)
             </summary>
             <param name = "s"></param>
             <param name = "perms"></param>
             <param name = "rockId"></param>
             <param name = "message"></param>
             <param name = "ownerId"></param>
             <param name = "completion"></param>
             <param name = "dueDate"></param>
             <param name = "now"></param>
             <returns></returns>
            
        </member>
        <member name="T:RadialReview.Accessors.ScorecardAccessor.ScoreUpdates">
            <summary>
            SyncAction.UpdateScore(scoreId)
            </summary>
            <param name = "s"></param>
            <param name = "perms"></param>
            <param name = "scoreId"></param>
            <param name = "value"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.ScorecardAccessor.GenerateUpdateForCalculatedScore_Unsafe(RadialReview.Utilities.FormulaUtility.ParsedFormula,RadialReview.Utilities.DataTypes.DefaultDictionary{System.Int64,RadialReview.Utilities.DataTypes.DefaultDictionary{System.Int64,System.Nullable{System.Double}}},System.Collections.Generic.Dictionary{System.String,RadialReview.Accessors.ScorecardAccessor.FormulaVariable},System.Int64,RadialReview.Models.Scorecard.ScoreModel)">
            <summary>
            Perform one-off recalculation
            </summary>
            <param name = "parsed">the parsed formula</param>
            <param name = "scoreLookup">lookup containing all score needed to evaluate this cell. [measurableId][weekId] </param>
            <param name = "variableLookup">lookup containing parsed variable information. [variableStr] </param>
            <param name = "weekId">current week</param>
            <param name = "scoreToUpdate">the score to update with calculated value</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.ScorecardAccessor.UpdateCalculatedScores_FromUpdatedScore_Unsafe(NHibernate.ISession,System.Collections.Generic.List{RadialReview.Models.Scorecard.ScoreModel})">
            <summary>
            When these scores are updated, also update their dependencies
            </summary>
            <param name = "s"></param>
            <param name = "scores"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.TeamAccessor.GetTeamMembers(RadialReview.Utilities.Query.AbstractQuery,RadialReview.Utilities.PermissionsUtility,System.Int64)">
            <summary>
            Requires:
                OrganizationTeamModel
                TeamDurationModel
                UserOrganizationModel
            </summary>
        </member>
        <member name="M:RadialReview.Accessors.TodoCreation.GenerateL10Todo(System.Int64,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.String,System.Int64,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Pass in the exact time that it is due. Must be adjusted to the end-of-day prior to calling this method of the day.
            If todo is due on 2/28/2018, and the client is in Pacific time, pass in "2/29/2018 6:59:00". 
            </summary>
            <param name="recurrenceId"></param>
            <param name="message"></param>
            <param name="details"></param>
            <param name="accountableUserId"></param>
            <param name="dueDate"></param>
            <param name="createdDuringMeeting"></param>
            <param name="modelType"></param>
            <param name="modelId"></param>
            <param name="now"></param>
            <param name="padId"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Accessors.UserAccessor.EditUser(RadialReview.Models.UserOrganizationModel,System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            -3 for managerId sets the user as an organization manager
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Hooks.IPaymentHookChargeMetaData.DiscountApplied">
            <summary>
            AmountPaid includes discounts. This field is purely informational.
            </summary>
        </member>
        <member name="T:RadialReview.Utilities.DataTypes.TheReviewers_CoworkerRelationships">
            <summary>
            Who are the Reviewees for this Reviewer?
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.DataTypes.DateRangeExtensions.FilterRestricted``1(RadialReview.Utilities.DataTypes.DateRange)">
            <summary>
            Filters IDeletable. Use Filter.Compile() for Linq
            </summary>
            <typeparam name="T"></typeparam>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.DataTypes.DateRangeExtensions.Filter``1(RadialReview.Utilities.DataTypes.DateRange)">
            <summary>
            Filters IHistoricals. Use Filter.Compile() for Linq. Was alive any time during this range
            </summary>
            <typeparam name="T"></typeparam>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Utilities.DataTypes.DefaultDictionary`2.MergeFunction">
            <summary>
            Key,OldValue,AddedValue,=NewValue
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.DataTypes.DefaultDictionary`2.#ctor(System.Func{`0,`1})">
            <summary>
            Creates a default dictionary with mergeFunction as an overwrite
            </summary>
            <param name="defaultFunc"></param>
        </member>
        <member name="T:RadialReview.Utilities.BinPacking.RectangleBinPack`1">
            <summary>
            https://github.com/davidmchapman/3DContainerPacking
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.BinPacking.RectangleBinPack`1.#ctor(System.Int32,System.Int32)">
            Restarts the packing process, clearing all previously packed rectangles and
            			sets up a new bin of a given initial size. These bin dimensions stay fixed during
            			the whole packing process, i.e. to change the bin size, the packing must be
            			restarted again with a new call to Init(). 
        </member>
        <member name="M:RadialReview.Utilities.BinPacking.RectangleBinPack`1.UsedSurfaceArea(RadialReview.Utilities.BinPacking.RectangleBinPack{`0}.Node)">
            Recursively calls itself. 
        </member>
        <member name="M:RadialReview.Utilities.BinPacking.RectangleBinPack`1.Insert(RadialReview.Utilities.BinPacking.RectangleBinPack{`0}.Node,System.Double,System.Double)">
            Running time is linear to the number of rectangles already packed. Recursively calls itself.
            			@return 0null If the insertion didn't succeed. 
        </member>
        <member name="T:RadialReview.Utilities.JenksFisher">
            <summary>
            https://github.com/verysimplenick/JenksFisherNaturalBreaks/blob/master/JenksFisher.cs
            Port of Jenks/Fisher breaks originally created in C by Maarten Hilferink.
            <remarks>
                 http://wiki.objectvision.nl/index.php/CalcNaturalBreaksCode
                 http://wiki.objectvision.nl/index.php/Fisher%27s_Natural_Breaks_Classification
                 https://github.com/pschoepf/naturalbreaks
             </remarks>
             </summary>
        </member>
        <member name="T:RadialReview.Utilities.JenksFisher.ValueCountTuple">
            <summary>
            Replacing ValueTuple by class,
            intellisence didn't work in sqlproj with C# 7.0
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.CreateJenksFisherBreaksArray(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Main entry point for creation of Jenks-Fisher natural breaks.
            you should use 2 breaks and ignore the first one..
            </summary>
            <param name="values">values array of the values, do not need to be sorted.</param>
            <param name="numBreaks">number of breaks to create</param>
            <returns>Array with breaks</returns>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.CreateJenksFisherBreaksIndexArray(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            you should use 2 breaks and ignore the first one..
            </summary>
            <param name="values"></param>
            <param name="numBreaks"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.#ctor(System.Collections.Generic.List{RadialReview.Utilities.JenksFisher.ValueCountTuple},System.Int32)">
            <summary>
            Constructor that initializes main variables used in fisher calculation of natural breaks
            </summary>
            <param name="tuples">
                Ordered list of pairs of values to occurrence counts.
                The value sequence must be strictly increasing, all weights must be positive
            </param>
            <param name="numBreaks"> Number of breaks to find.</param>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.SumOfWeights(System.Int32,System.Int32)">
            <summary>
            Gets sum of weighs for elements with index b..e.
            </summary>
            <param name="beginIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.SumOfWeightedValues(System.Int32,System.Int32)">
            <summary>
            Gets sum of weighed values for elements with index b..e
            </summary>
            <param name="beginIndex">index of begin element</param>
            <param name="endIndex">index of end element</param>
            <returns>cumul. sum of the values*weight</returns>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.SSM(System.Int32,System.Int32)">
            <summary>
            Gets the Squared Mean for elements within index b..e, multiplied by weight. Note that n*mean^2 = sum^2/n when mean := sum/n
            </summary>
            <param name="beginIndex">index of begin element</param>
            <param name="endIndex">index of end element</param>
            <returns>the sum of squared mean</returns>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.FindMaxBreakIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds CB[i+completedRows] given that the result is at least bp+(completedRows-1) and less than ep+(completedRows-1)
            </summary>
            <param name="i"></param>
            <param name="bp"></param>
            <param name="ep"></param>
            <returns></returns>
            <remarks>
                Complexity: O(ep-bp) ~ O(m)
            </remarks>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.CalculateRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Find CB[i+completedRows] for all <c>i >= bi and i less than ei</c> given that the
            results are at least bp+(completedRows-1) and less than ep+(completedRows-1)
            </summary>
            <param name="bi"></param>
            <param name="ei"></param>
            <param name="bp"></param>
            <param name="ep"></param>
            <remarks>
            Complexity: O(log(ei-bi)*Max((ei-bi),(ep-bp))) ~ O(m*log(m))
            </remarks>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.CalculateAll">
            <summary>
            Starting point of calculation of breaks.
            Complexity: O(n*log(n)*numBreaks)
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.ClassifyByJenksFisher(System.Int32,System.Collections.Generic.List{RadialReview.Utilities.JenksFisher.ValueCountTuple})">
            <summary>
            Does the internal processing to actually create the breaks.
            </summary>
            <param name="numBreaks">number of breaks</param>
            <param name="tuples">asc ordered input of values and their occurence counts</param>
            <returns>created breaks</returns>
        </member>
        <member name="M:RadialReview.Utilities.JenksFisher.BuildValueCountTuples(System.Collections.Generic.List{System.Double})">
            <summary>
            Calculates the occurence count of given values and returns them in sorted list.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.DistanceUtility.DamerauLevenshteinDistance(System.String,System.String,System.Int32)">
            <summary>
            Computes the Damerau-Levenshtein Distance between two strings, represented as arrays of
            integers, where each integer represents the code point of a character in the source string.
            Includes an optional threshhold which can be used to indicate the maximum allowable distance.
            </summary>
            <param name="source">An array of the code points of the first string</param>
            <param name="target">An array of the code points of the second string</param>
            <param name="threshold">Maximum allowable distance</param>
            <returns>Int.MaxValue if threshhold exceeded; otherwise the Damerau-Leveshteim distance between the strings</returns>
            http://stackoverflow.com/questions/9453731/how-to-calculate-distance-similarity-measure-of-given-2-strings
        </member>
        <member name="P:RadialReview.Utilities.Config.ActiveCampaignConfig.ActId">
            <summary>
            https://tractiontools.activehosted.com/admin/main.php?action=settings#tab_track  >> click "Event Tracking API"
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Config.ActiveCampaignConfig.TrackKey">
            <summary>
            "Event Key" https://tractiontools.activehosted.com/admin/main.php?action=settings#tab_track
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Config.ActiveCampaignConfig.ConfigFields.CoachType">
            <summary>
            Business Coach",
            Certified of Professional EOS Implementer",
            Other",
            Unknown",
            EOS Implementer (Basecamp only; no certs)",
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.CsvUtility.SetCell(SpreadsheetLight.SLDocument,System.String,System.Int32,System.Int32)">
            <summary>
            Takes zero indexed rows and columns, automatically converts cell to long if possible
            </summary>
            <param name="document"></param>
            <param name="cell"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:RadialReview.Utilities.Encrypt.Crypto.UniqueHash(System.String,System.String)">
            <summary>
            Unsafe method only used to generate as hash based on input.
            </summary>
            <param name="plainText"></param>
            <param name="sharedSecret"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.Encrypt.Crypto.EncryptStringAES(System.String,System.String)">
            <summary>
            Encrypt the given string using AES.  The string can be decrypted using 
            DecryptStringAES().  The sharedSecret parameters must match.
            </summary>
            <param name="plainText">The text to encrypt.</param>
            <param name="sharedSecret">A password used to generate a key for encryption.</param>
        </member>
        <member name="M:RadialReview.Utilities.Encrypt.Crypto.DecryptStringAES(System.String,System.String)">
            <summary>
            Decrypt the given string.  Assumes the string was encrypted using 
            EncryptStringAES(), using an identical sharedSecret.
            </summary>
            <param name="cipherText">The text to decrypt.</param>
            <param name="sharedSecret">A password used to generate a key for decryption.</param>
        </member>
        <member name="T:RadialReview.Utilities.EventType">
            <summary>
            ONLY USE ONE UNDERSCORE
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.GraphUtility.HasCircularDependency``1(System.Collections.Generic.List{``0},System.Func{``0,System.Int64},System.Func{``0,System.Nullable{System.Int64}})">
            <summary>
            https://en.wikipedia.org/wiki/Topological_sorting
            </summary>
            <param name="nodes"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.GraphUtility.TopologicalSort``1(System.Collections.Generic.HashSet{``0},System.Collections.Generic.HashSet{System.Tuple{``0,``0}})">
            <summary>
            https://gist.github.com/Sup3rc4l1fr4g1l1571c3xp14l1d0c10u5/3341dba6a53d7171fe3397d13d00ee3f/
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nodes"></param>
            <param name="edges"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.HtmlUtility.StripHtml(System.String)">
            <summary>
            Remove all the tags in a string and unescape string
            </summary>
            <param name = "html"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Utilities.Libraries.Cors.CorsConstants">
            <summary>
            CORS-related constants.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.PreflightHttpMethod">
            <summary>
            The HTTP method for the CORS preflight request.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.Origin">
            <summary>
            The Origin request header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AnyOrigin">
            <summary>
            The value for the Access-Control-Allow-Origin response header to allow all origins.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlRequestMethod">
            <summary>
            The Access-Control-Request-Method request header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlRequestHeaders">
            <summary>
            The Access-Control-Request-Headers request header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlAllowOrigin">
            <summary>
            The Access-Control-Allow-Origin response header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlAllowHeaders">
            <summary>
            The Access-Control-Allow-Headers response header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlExposeHeaders">
            <summary>
            The Access-Control-Expose-Headers response header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlAllowMethods">
            <summary>
            The Access-Control-Allow-Methods response header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlAllowCredentials">
            <summary>
            The Access-Control-Allow-Credentials response header.
            </summary>
        </member>
        <member name="F:RadialReview.Utilities.Libraries.Cors.CorsConstants.AccessControlMaxAge">
            <summary>
            The Access-Control-Max-Age response header.
            </summary>
        </member>
        <member name="T:RadialReview.Utilities.Libraries.Cors.CorsRequestContext">
            <summary>
            Provides access to CORS-specific information on the request.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RadialReview.Utilities.Libraries.Cors.CorsRequestContext"/> class.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.RequestUri">
            <summary>
            Gets or sets the request URI.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.HttpMethod">
            <summary>
            Gets or sets the request method.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.Origin">
            <summary>
            Gets or sets the Origin header value.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.Host">
            <summary>
            Gets or sets the Host header value.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.AccessControlRequestMethod">
            <summary>
            Gets or sets the Access-Control-Request-Method header value.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.AccessControlRequestHeaders">
            <summary>
            Gets the Access-Control-Request-Headers header value.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.Properties">
            <summary>
            Gets a set of properties for the <see cref="T:RadialReview.Utilities.Libraries.Cors.CorsRequestContext"/>.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.IsPreflight">
            <summary>
            Gets a value indicating whether this is a preflight request.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.Libraries.Cors.CorsRequestContext.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:RadialReview.Utilities.Libraries.Cors.CorsResult">
            <summary>
            Results returned by <see cref="!:CorsEngine"/>.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.Libraries.Cors.CorsResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RadialReview.Utilities.Libraries.Cors.CorsResult"/> class.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.IsValid">
            <summary>
            Gets a value indicating whether the result is valid.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.ErrorMessages">
            <summary>
            Gets the error messages.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.AllowedOrigin">
            <summary>
            Gets or sets the allowed origin.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.SupportsCredentials">
            <summary>
            Gets or sets a value indicating whether the resource supports user credentials.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.AllowedMethods">
            <summary>
            Gets the allowed methods.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.AllowedHeaders">
            <summary>
            Gets the allowed headers.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.AllowedExposedHeaders">
            <summary>
            Gets the allowed headers that can be exposed on the response.
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Libraries.Cors.CorsResult.PreflightMaxAge">
            <summary>
            Gets or sets the number of seconds the results of a preflight request can be cached.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.Libraries.Cors.CorsResult.ToResponseHeaders">
            <summary>
            Returns CORS-specific headers that should be added to the response.
            </summary>
            <returns>The response headers.</returns>
        </member>
        <member name="M:RadialReview.Utilities.Libraries.Cors.CorsResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:RadialReview.Utilities.NHibernateHelper">
            <summary>
            NHibernate helper class
            </summary>
            <remarks>
            Assumes you are using NHibernate version 3.1.0.4000 or greater (Not tested on previous versions)
            </remarks>
        </member>
        <member name="M:RadialReview.Utilities.NHibernateHelper.GetPropertyAndColumnNames(NHibernate.ISessionFactory,System.Type)">
            <summary>
            Creates a dictionary of property and database column/field name given an
            NHibernate mapped entity
            </summary>
            <remarks>
            This method uses reflection to obtain an NHibernate internal private dictionary.
            This is the easiest method I know that will also work with entitys that have mapped components.
            </remarks>
            <param name="sessionFactory">NHibernate SessionFactory</param>
            <param name="type">An mapped type</param>
            <returns>Entity Property/Database column dictionary</returns>
        </member>
        <member name="M:RadialReview.Utilities.NHibernate.Alteration.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            For referenced tables.. tables with a base model.
            </summary>
            <param name="tABLE_NAME"></param>
            <param name="cOLUMN_NAME"></param>
            <param name="rEFERENCED_TABLE_NAME"></param>
            <param name="rEFERENCED_COLUMN_NAME"></param>
            <param name="incorrectForeignKey"></param>
            <param name="correctedForeignKey"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:RadialReview.Utilities.NHibernate.Alteration.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            For non-referenced tables.. tables without a base model
            </summary>
            <param name="tABLE_NAME"></param>
            <param name="cOLUMN_NAME"></param>
            <param name="incorrectForeignKey"></param>
            <param name="correctedForeignKey"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="F:RadialReview.Utilities.NHibernate.AuditForeignKeyInterceptorData.Alterations">
            Somehow, Fluent began generating new foreign key names. The purpose of this file is to revert the foreign key names. 
            This file is run right before generating the schema updates. The foreign keys are replaced in the Nhibernate Configuration.
            
            This file is needed because the Audit tables are huge. Deadlocks occur when altering these tables.
        </member>
        <member name="M:RadialReview.Utilities.NHibernate.CustomValidityAuditStrategy.AddExtraRevisionMapping(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
            <summary>
            Adds a <![CDATA[<many-to-one>]]> mapping to the revision entity as an endrevision.
            Also, if <see cref="P:NHibernate.Envers.Configuration.AuditEntitiesConfiguration.IsRevisionEndTimestampEnabled"/> set, adds a timestamp when the revision is no longer valid.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.Pdf.MultipageLayoutOptimizer.TrySplitting(System.Collections.Generic.List{RadialReview.Utilities.Pdf.MultipageDocumentLayout},System.Collections.Generic.List{RadialReview.Utilities.Pdf.MultipageDocumentPageLayout},RadialReview.Utilities.Pdf.MultipageLayoutOptimizer.SplitOnPropery,RadialReview.Utilities.Pdf.MultipageLayoutOptimizer.LayoutFitness,System.String,RadialReview.Utilities.Pdf.TimeoutCheck)">
            <summary>
            Split the pages into groups. try to pair groups together and then remerge the document
            </summary>
            <param name="results"></param>
            <param name="testableLayouts"></param>
            <param name="splitOnProperty"></param>
            <param name="fitnessScore"></param>
            <param name="debugInfo"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.Pdf.MultipageLayoutOptimizer.GetTestableLayouts(RadialReview.Utilities.Pdf.MultiPageDocument.Settings,RadialReview.Utilities.Pdf.TimeoutCheck,System.Int32,System.Boolean)">
            <summary>     
            Very expensive. Avoid more than 4 deep
            </summary>
        </member>
        <member name="P:RadialReview.Utilities.Pdf.LayoutTrialResult.Score">
             <summary>
            	WEIGHTING FORMULA..
             
            		Solve for w_1, w_2:
            				[scale_1 ^ w_1 / pages_1 ^ w_2] == [scale_2 ^ w_1 / pages_2 ^ w_2]
            				
            		Or minimize
            			(-1 + [scale_1 ^ w_1 / pages_1 ^ w_2]
            				* [scale_2 ^ w_1 / pages_2 ^ w_2]
            				* [scale_3 ^ w_1 / pages_3 ^ w_2]
            				... 
            				* [scale_n ^ w_1 / pages_n ^ w_2]
            
            			)^2 
            				 					
            
            		Ex: If you want to split the page when scaling is smaller than 0.7
            
            		Condition 1: 
            			scale_1 = 0.7
            			pages_1 = 1
            		Condition 2:
            			scale_2 = 1.0
            			pages_2 = 2
            
            		Solve: [(.7 ^ w_1) / (1^w_2)] = [(1 ^ w_1) / (2^w_2)]
            
            			w2 => 0.514573 w1
            				w1 = 1.94336
            				w2 = 1 
             </summary>
        </member>
        <member name="T:RadialReview.Utilities.Pdf.MultiPageDocument.PageGenerator">
            <summary>
            Generate the cells that appear on the selected page
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.Pdf.MultiPageDocument.ReorderPagesInPlace(System.Int32[],PdfSharp.Pdf.PdfDocument)">
            <summary>
            Reorders in place
            </summary>
            <param name="orderings"></param>
            <param name="doc"></param>
        </member>
        <member name="M:RadialReview.Utilities.Pdf.MultiPageDocument.GetScaledBox(PdfSharp.Pdf.PdfPage,PdfSharp.Pdf.PdfPage,RadialReview.Utilities.Pdf.MultiPageDocument.Settings,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Use CropBox on pdfPage to resize to box.
            </summary>
            <param name="inputPage"></param>
            <param name="outputPage"></param>
            <param name="settings"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="horizontalCells"></param>
            <param name="verticalCells"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.Pdf.MultiPageDocument.ScaleTo(PdfSharp.Drawing.XRect,PdfSharp.Drawing.XRect,PdfSharp.Drawing.XSize,RadialReview.Utilities.Pdf.MultiPageDocument.Settings,PdfSharp.Drawing.XSize)">
            <summary>
            Crop box is to be fit into the cellBox. The cellbox is a location on the page 
            
            	page
            	 ___________		crop
            	|  _		|		 ____
            	| |_|..cell |		|	 |\ 
            	|			|		|    |  \
            	|			|		|____|  _'
            	|			|		 `-....|_| ..cell
            
            </summary>
            <param name="cropBox"></param>
            <param name="cellBox"></param>
            <param name="pageSize"></param>
            <param name="settings"></param>
            <param name="inputSize"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Utilities.Pdf.PdfWordWrapper">
            <summary>
            PdfWordWrapper
            wraps text to a specified line width for PDFsharp.
            Programmed by Huysentruit Wouter
            © Copyright by Fastload-Media.be
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.PermissionsListers.UserPermissionsHelper.GetUsersWeCanCreateMeetingItemsFor(NHibernate.ISession,RadialReview.Utilities.PermissionsUtility,System.Int64,System.Int64)">
            <summary>
            Returns a list of userOrgIds that we can create goals for
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.PermissionsUtility.MultiUserCanAdminMeetingWithUsers(RadialReview.Utilities.PermissionsUtility.MultiUserContext)">
            <summary>
            For meetings that we're an admin over, return a list of attendees.
            This is useful to see which users we can create items for.
            </summary>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.PermissionsUtility.GetAllPermItemsForUser(RadialReview.Models.PermItem.ResourceType,System.Int64)">
            <summary>
            Grabs perm items for explicitly specified permissions(RGM, Email) and implicit (Creator, Admin, Members)
            </summary>
            <param name="forUserId"></param>
            <param name="resourceType"></param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Utilities.PermissionsUtility.CircularReferenceInheritedPermissions.AccessLevel">
            <summary>
            Important: Only store one flag here.
            </summary>
        </member>
        <member name="M:RadialReview.Utilities.PermissionsUtility.CanAdminMeetingWithUser(System.Int64,System.Nullable{System.Int64},System.String)">
            <summary>
            RecurrenceId is there for speedup.
            </summary>
            <param name="userId"></param>
            <param name="optionalRecurrenceId"></param>
            <param name="onError"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Utilities.RealTime.RealTimeUtility.RecurrenceUpdater.UpdateScorecard(System.Collections.Generic.IEnumerable{RadialReview.Models.Scorecard.ScoreModel},System.Nullable{System.DateTime},System.Boolean,RadialReview.Models.Angular.Base.AngularListType,System.Int64)">
            <summary>
            AbsoluteUpdateTime is used to avoid collisions on scores in ui
            </summary>
            <param name="scores"></param>
            <param name="absoluteUpdateTime"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Utilities.Serializers.AngularSerialization">
            
              add "transform=true" to url to see untransformed.
             
             
             //
        </member>
        <member name="M:RadialReview.Utilities.Synchronize.SyncUtil.Lock(System.String,System.Nullable{System.Int64},System.Func{NHibernate.ISession,RadialReview.Models.Synchronize.SyncLock,System.Threading.Tasks.Task},RadialReview.Utilities.Synchronize.SyncUtil.TestHooks)">
            <summary>
            
            </summary>
            <param name = "key"></param>
            <param name = "clientUpdateTimeMs"></param>
            <param name = "atomic">Your atomic action. tx.Commit() and s.Flush() are called automatically</param>
            <param name = "testHooks"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Core.Accessors.JointAccountAccessor.SetParent(RadialReview.Models.UserOrganizationModel,System.Nullable{System.Int64},System.Int64,System.Nullable{System.Boolean})">
            <summary>
            returns whether an update has happened.
            </summary>
            <param name="caller"></param>
            <param name="parentId"></param>
            <param name="childOrgId"></param>
            <param name="parentPaying"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Core.Accessors.StrictlyAfterExecutors.EditIssueExecutor.AfterAtomicUpdate(NHibernate.ISession,RadialReview.Utilities.PermissionsUtility)">
            <summary>
            AfterAtomicUpdate
            </summary>
            <param name="s"></param>
            <param name="perms"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Core.Api.V1.QuarterlyConversations.Data(System.Int64)">
            <summary>
            This endpoint is for getting detailed data about a specific quarterly conversation
            </summary>
            <param name="QUARTERLY_CONVERSATION_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Core.Api.V1.QuarterlyConversations.Containers">
            <summary>
            This endpoint is for getting all of the quarterly conversations and data that have been created
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.HourlyEventAnalyzerEventsCronJob">
            <summary>
            Hourly
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.DailyEventAnalyzerEventsCronJob">
            <summary>
            Daily
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.WeeklyEventAnalyzerEventsCronJob">
            <summary>
            Weekly
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.BiweeklyEventAnalyzerEventsCronJob">
            <summary>
            biweekly
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.MonthlyEventAnalyzerEventsCronJob">
            <summary>
            Monthly
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.QuarterlyEventAnalyzerEventsCronJob">
            <summary>
            Quarterly
            </summary>
        </member>
        <member name="T:RadialReview.Core.Crosscutting.CronJobs.YearlyEventAnalyzerEventsCronJob">
            <summary>
            Yearly
            </summary>
        </member>
        <member name="T:RadialReview.Core.Repositories.RepositoryTransformers">
            <summary>
            This file is not meant to go to the database, it just transforms database models into GraphQL models
            I created this class so that it is easy to see which methods require permissions and which do not.
            This is because no permissions are required to simply transform a model.
            You should have checked permissions before you extracted the model from the database.
            </summary>
        </member>
        <member name="T:RadialReview.Core.GraphQL.Enumerations.gqlIssueVoting">
            <summary>
            Per Frontend
            Recurrence.Prioritization: Rank = 'PRIORITY' in v3.
            Recurrence.Prioritization: Priority = 'STAR' in v3.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.ConstantStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.AmazonS3BaseLocation">
            <summary>
              Looks up a localized string similar to https://s3.amazonaws.com/.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.AmazonS3Location">
            <summary>
              Looks up a localized string similar to https://s3.amazonaws.com/Radial/.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.ImageGroupPlaceholder">
            <summary>
              Looks up a localized string similar to placeholder/GroupIcon.png.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.ImageOrganizationPlaceholder">
            <summary>
              Looks up a localized string similar to placeholder/orgPlaceholder.png.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.ImagePlaceholder">
            <summary>
              Looks up a localized string similar to placeholder/orgPlaceholder.png.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.ImagePositionPlaceholder">
            <summary>
              Looks up a localized string similar to placeholder/Briefcase.png.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.ImageUserPlaceholder">
            <summary>
              Looks up a localized string similar to placeholder/placeholder.png.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.MandrillApiKey">
            <summary>
              Looks up a localized string similar to H48-__ZehIbJWPLqmd-Hgg.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.PopHost">
            <summary>
              Looks up a localized string similar to pop.gmail.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.PopLogin">
            <summary>
              Looks up a localized string similar to clay.upton@radialreview.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.PopPassword">
            <summary>
              Looks up a localized string similar to 4Ztdgavv49.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.PopPort">
            <summary>
              Looks up a localized string similar to 995.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.SmtpFromAddress">
            <summary>
              Looks up a localized string similar to clay.upton@radialreview.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.SmtpHost">
            <summary>
              Looks up a localized string similar to smtp.gmail.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.SmtpLogin">
            <summary>
              Looks up a localized string similar to clay.upton@radialreview.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.SmtpPassword">
            <summary>
              Looks up a localized string similar to 4Ztdgavv49.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ConstantStrings.SmtpPort">
            <summary>
              Looks up a localized string similar to 587.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.DisplayNameStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.about">
            <summary>
              Looks up a localized string similar to About.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.active">
            <summary>
              Looks up a localized string similar to Active.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.addQuestion">
            <summary>
              Looks up a localized string similar to Add question.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.addUser">
            <summary>
              Looks up a localized string similar to Add user.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.application">
            <summary>
              Looks up a localized string similar to Application.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.category">
            <summary>
              Looks up a localized string similar to Category.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.completion">
            <summary>
              Looks up a localized string similar to Completion.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.confirmNewPassword">
            <summary>
              Looks up a localized string similar to Confirm new password.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.confirmPassword">
            <summary>
              Looks up a localized string similar to Confirm password.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.create">
            <summary>
              Looks up a localized string similar to Create.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.createNew">
            <summary>
              Looks up a localized string similar to Create new.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.createOrganization">
            <summary>
              Looks up a localized string similar to Create organization.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.currentPassword">
            <summary>
              Looks up a localized string similar to Current password.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.dateCreated">
            <summary>
              Looks up a localized string similar to Date created.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.Default">
            <summary>
              Looks up a localized string similar to Default.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.defaultEditMessage">
            <summary>
              Looks up a localized string similar to Edit here....
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.details">
            <summary>
              Looks up a localized string similar to Details.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.directlyManaging">
            <summary>
              Looks up a localized string similar to Directly managing.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.done">
            <summary>
              Looks up a localized string similar to Done!.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.due">
            <summary>
              Looks up a localized string similar to Due.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.edit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.editQuestion">
            <summary>
              Looks up a localized string similar to Edit question.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.email">
            <summary>
              Looks up a localized string similar to Email.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.enabled">
            <summary>
              Looks up a localized string similar to Enabled.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.feedback">
            <summary>
              Looks up a localized string similar to Feedback.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.finish">
            <summary>
              Looks up a localized string similar to Finish.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.firstName">
            <summary>
              Looks up a localized string similar to First name.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.For">
            <summary>
              Looks up a localized string similar to For.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.greaterThan">
            <summary>
              Looks up a localized string similar to Greater than.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.group">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.groupName">
            <summary>
              Looks up a localized string similar to Group name.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.groups">
            <summary>
              Looks up a localized string similar to Groups.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.hey">
            <summary>
              Looks up a localized string similar to Hey!.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.high">
            <summary>
              Looks up a localized string similar to High.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.highest">
            <summary>
              Looks up a localized string similar to Highest.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.imageUrl">
            <summary>
              Looks up a localized string similar to Image URL.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.industry">
            <summary>
              Looks up a localized string similar to Industry.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.invalid">
            <summary>
              Looks up a localized string similar to Invalid.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.isManager">
            <summary>
              Looks up a localized string similar to Manager.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.jobTitle">
            <summary>
              Looks up a localized string similar to Job title.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.joined">
            <summary>
              Looks up a localized string similar to Joined.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.lastName">
            <summary>
              Looks up a localized string similar to Last name.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.lessThan">
            <summary>
              Looks up a localized string similar to Less than.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.login">
            <summary>
              Looks up a localized string similar to Log in.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.low">
            <summary>
              Looks up a localized string similar to Low.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.lowest">
            <summary>
              Looks up a localized string similar to Lowest.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.manage">
            <summary>
              Looks up a localized string similar to Manage.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.manageOrganization">
            <summary>
              Looks up a localized string similar to Manage organization.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.managerCanAddQuestions">
            <summary>
              Looks up a localized string similar to Managers can add questions.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.max">
            <summary>
              Looks up a localized string similar to Max.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.medium">
            <summary>
              Looks up a localized string similar to Medium.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.members">
            <summary>
              Looks up a localized string similar to Members.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.min">
            <summary>
              Looks up a localized string similar to Min.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.New">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.newPassword">
            <summary>
              Looks up a localized string similar to New password.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.no">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.normal">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.numberOfMembers">
            <summary>
              Looks up a localized string similar to # Members.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.numberOfQuestions">
            <summary>
              Looks up a localized string similar to # Questions.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.ok">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.okSave">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.organization">
            <summary>
              Looks up a localized string similar to Organization.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.organizationName">
            <summary>
              Looks up a localized string similar to Organization name.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.organizationQuestions">
            <summary>
              Looks up a localized string similar to Organization questions.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.password">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.position">
            <summary>
              Looks up a localized string similar to Position.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.question">
            <summary>
              Looks up a localized string similar to Question.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.questions">
            <summary>
              Looks up a localized string similar to Questions.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.questionType">
            <summary>
              Looks up a localized string similar to Question type.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.register">
            <summary>
              Looks up a localized string similar to Register.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.relativeComparison">
            <summary>
              Looks up a localized string similar to Relative comparison.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.remainingIsOptional">
            <summary>
              Looks up a localized string similar to Remaining questions are optional.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.remainingQuestions">
            <summary>
              Looks up a localized string similar to Some required questions are still unanswered.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.rememberMe">
            <summary>
              Looks up a localized string similar to Remember me?.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.review">
            <summary>
              Looks up a localized string similar to Review.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.reviews">
            <summary>
              Looks up a localized string similar to Reviews.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.skip">
            <summary>
              Looks up a localized string similar to Skip.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.slider">
            <summary>
              Looks up a localized string similar to Slider.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.submit">
            <summary>
              Looks up a localized string similar to Submit.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.take">
            <summary>
              Looks up a localized string similar to Take.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.team">
            <summary>
              Looks up a localized string similar to Team.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.thumbs">
            <summary>
              Looks up a localized string similar to Thumbs Up/Down.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.type">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.unattached">
            <summary>
              Looks up a localized string similar to Unattached.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.unsavedItems">
            <summary>
              Looks up a localized string similar to There are items you have not saved. .
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.unverified">
            <summary>
              Looks up a localized string similar to Unverified.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.user">
            <summary>
              Looks up a localized string similar to User.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.username">
            <summary>
              Looks up a localized string similar to Username.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.users">
            <summary>
              Looks up a localized string similar to Users.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.yesDeleteIt">
            <summary>
              Looks up a localized string similar to Yes, delete it..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.you">
            <summary>
              Looks up a localized string similar to You.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.DisplayNameStrings.youveCompletedThisReview">
            <summary>
              Looks up a localized string similar to Looks like you&apos;ve completed this review.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.EmailStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.BodyWrapper">
            <summary>
              Looks up a localized string similar to &lt;table style=&quot;background-color:#f3f4f4;border-radius:6px&quot; bgcolor=&quot;#F3F4F4&quot; width=&quot;100%&quot; align=&quot;center&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;
            &lt;tbody&gt;
             &lt;!-- image header--&gt;
            	&lt;tr&gt;
            		&lt;td&gt;
            			&lt;table style=&quot;font-family:arial,helvetica,sans-serif;font-size:14px;line-height:20px; margin-top: 38px;&quot; align=&quot;center&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;{2}&quot;&gt;
            				&lt;tbody&gt;
            					&lt;tr&gt;
            						&lt;td&gt;
            							&lt;br/&gt;
            							&lt;img src=&quot;https://s3.us-west-2.amazonaws.com/files.app.bloomgrowth.com/logos/bloom-growth-l [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.DefaultSurvey_Body">
            <summary>
              Looks up a localized string similar to You have a new survey to complete. Please complete the survey here:.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.DefaultSurvey_Subject">
            <summary>
              Looks up a localized string similar to You have a new survey to complete.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.FirstCharge_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;
            Welcome to the &lt;b&gt;Bloom&lt;span style=&quot;&quot;line-height: 200%;font-size: 50%;vertical-align: top;&quot;&quot;&gt;®&lt;/span&gt; Growth&lt;/b&gt; family!
            &lt;/p&gt;&lt;p&gt;
            Please save this email which has some important next-steps and links.
            &lt;/p&gt;&lt;p&gt;
            &lt;b&gt;What&apos;s next?&lt;/b&gt;
            &lt;/p&gt;&lt;p&gt;
            Schedule a quick &lt;a href=&quot;https://www.bloomgrowth.com/schedule/optimize/&quot;&gt;&lt;b&gt;15-20 minute Optimizer Call&lt;/b&gt;&lt;/a&gt; to ensure that you are taking advantage of all of the features that Bloom Growth has to offer. 
            &lt;/p&gt;&lt;p&gt;
            &lt;b&gt;Get Assistance When you Need it&lt;/b&gt;
             &lt;/p&gt;&lt;p [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.Footer">
            <summary>
              Looks up a localized string similar to This message was generated automatically by Bloom Growth.&lt;br/&gt; 1201 Infinity Ct, Lincoln, NE 68512&lt;br/&gt;If you feel you have received this message in error you can respond to this email..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.JoinOrganizationUnderManager_Body">
             <summary>
               Looks up a localized string similar to {0}, &lt;/br&gt;											
            You&apos;ve been invited to join {1} on {4}.  &lt;/br&gt;
            &lt;/br&gt;
            {4} is a collaboration app for teams and meetings.
            &lt;/br&gt;
            &lt;/br&gt;
            											
            &lt;div style=&quot;text-align:center&quot;&gt;&lt;!--[if mso]&gt;
              &lt;v:roundrect xmlns:v=&quot;urn:schemas-microsoft-com:vml&quot; xmlns:w=&quot;urn:schemas-microsoft-com:office:word&quot; href=&quot;{2}&quot; style=&quot;height:40px;v-text-anchor:middle;width:90px;&quot; arcsize=&quot;100%&quot; stroke=&quot;f&quot; fillcolor=&quot;#033248&quot;&gt;
                &lt;w:anchorlock/&gt;
                &lt;center&gt;
              &lt;![endif]--&gt;
                  &lt;a href=&quot;{2}&quot;
            style=&quot;background-colo [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.JoinOrganizationUnderManager_Subject">
            <summary>
              Looks up a localized string similar to {3} has invited you to join {1} on {2}.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.MeetingSummary_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;Here is your meeting summary for this week:&lt;/p&gt;
            {1}
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {2} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.MeetingSummary_Body_New">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;Here is your meeting summary for this week:&lt;/p&gt;
            {1}
            &lt;br /&gt;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.MeetingSummary_Subject">
            <summary>
              Looks up a localized string similar to Meeting Summary - {0}.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.NewReview_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;{6} is open until {2}. You can take your eval by clicking the following link:&lt;/p&gt;
            &lt;br&gt; 
                &lt;a href=&quot;{3}&quot;&gt;{4}&lt;/a&gt;
            &lt;br /&gt;&lt;br /&gt;If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {5} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.NewReview_Subject">
            <summary>
              Looks up a localized string similar to You have a new eval from {0}.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.PasswordReset_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;To reset your password please click the following link:&lt;/p&gt;
            &lt;br&gt; 
                &lt;a href=&quot;{1}&quot;&gt;{2}&lt;/a&gt;
            &lt;br /&gt;&lt;br /&gt;If it was not at your request, then please contact us immediately. If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {3} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.PasswordReset_Subject">
            <summary>
              Looks up a localized string similar to {0} Password Reset.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.PaymentException_Body">
            <summary>
              Looks up a localized string similar to &lt;p&gt;Payment Failed: {0}&lt;/p&gt;&lt;p&gt;{1}&lt;/p&gt;&lt;p&gt;{2}&lt;/p&gt;&lt;p&gt;{3}&lt;/p&gt;.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.PaymentException_Subject">
            <summary>
              Looks up a localized string similar to Payment Failed for {0}.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.PaymentInvoice_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;This is an invoice for your {0} account. To avoid interruptions in service, please ensure your credit card is up-to-date.  Your credit card will be charged automatically. We appreciate your business!&lt;/p&gt;
            
            &lt;p&gt;Questions? Contact us anytime at {1}.&lt;/p&gt;
            
            &lt;p&gt;------------------------------------
            &lt;br/&gt;{0} Invoice - Subscription - {2}
            &lt;br/&gt;
            &lt;br/&gt;Amount: USD {3}*
            &lt;br/&gt;
            &lt;br/&gt;Charged to: ({4})
            &lt;br/&gt;Date: {6}
            &lt;br/&gt;For service through: {7}
            &lt;br/&gt;
            &lt;br/&gt;{8}
            &lt;br/&gt;-----------------------------------&lt;/p&gt;
            &lt;p  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.PaymentReceipt_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;We received payment for your {0} subscription. Thanks for your business!&lt;/p&gt;
            
            &lt;p&gt;Questions? Contact us anytime at {1}.&lt;/p&gt;
            
            &lt;p&gt;------------------------------------
            &lt;br/&gt;{0} Receipt - Subscription - {2}
            &lt;br/&gt;
            &lt;br/&gt;Amount: USD {3}
            &lt;br/&gt;
            &lt;br/&gt;Charged to: ({4})
            &lt;br/&gt;Transaction ID: {5}
            &lt;br/&gt;Date: {6}
            &lt;br/&gt;For service through: {7}
            &lt;br/&gt;
            &lt;br/&gt;{8}
            &lt;br/&gt;-----------------------------------&lt;/p&gt;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.Prereview_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;The {1} pre-review has started. You&apos;ll need to customize reviews for your direct reports by  {2}. You can begin your pre-review customizations by clicking the following link:&lt;/p&gt;
            &lt;br&gt; 
                &lt;a href=&quot;{3}&quot;&gt;{4}&lt;/a&gt;
            &lt;br /&gt;&lt;br /&gt;If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {5} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.Prereview_Subject">
            <summary>
              Looks up a localized string similar to You have a new pre-review task from {0}.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.QuarterlyConversation_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;You have a new {5} due on {1}. You can complete it by clicking the following link:&lt;/p&gt;
            &lt;br&gt; 
                &lt;a href=&quot;{2}&quot;&gt;{3}&lt;/a&gt;
            &lt;br /&gt;&lt;br /&gt;If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {4} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.QuarterlyConversationReminder_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;You have a new {5} due on {1}. You can complete it by clicking the following link:&lt;/p&gt;
            &lt;br&gt; 
                &lt;a href=&quot;{2}&quot;&gt;{3}&lt;/a&gt;
            &lt;br /&gt;&lt;br /&gt;If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {4} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.QuarterlyPrintout_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;Attached please find the quarterly printout for {0}.&lt;/p&gt;
            &lt;br /&gt;
            &lt;br /&gt;
            Thank you,&lt;br /&gt;
            The {1} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.ReminderReview_Subject">
            <summary>
              Looks up a localized string similar to Reminder, you still have a review to complete..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.RemindReview_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;You have a review due on {1}. You can take your review by clicking the following link:&lt;/p&gt;
                &lt;a href=&quot;{2}&quot;&gt;{3}&lt;/a&gt;
            &lt;br /&gt;&lt;br /&gt;If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {4} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.TodoReminder_Body">
             <summary>
               Looks up a localized string similar to &lt;p&gt;{0},&lt;/p&gt;
            &lt;p&gt;Here are your to-dos. To view your to-dos, click &lt;a href=&apos;{3}&apos;&gt;here&lt;/a&gt;.&lt;/p&gt;
            &lt;p&gt;{4}&lt;/p&gt;
            {1}
            &lt;br /&gt;If you have any questions, feedback, or concerns, you can reply to this e-mail address.
            &lt;br /&gt;
            &lt;br /&gt;
            Sincerely,&lt;br/&gt;
            The {2} Team.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.TodoReminder_Subject">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailStrings.UpdateCard_Body">
             <summary>
               Looks up a localized string similar to Hello,
            
            I hope that this email finds you well.
            
            We noticed that your credit card on file is about to expire. Please update your card information within {0}.
            
            If you do need to update your card information in your {0} account please follow the steps below:
            
            1. Log in to your {0} account.
            2. Navigate to &quot;Manage Organization&quot; from the drop down menu by your picture (Upper right corner) then click the &quot;Payment&quot; tab (click this link {1}Manage/Payment)
            3. Click &quot;Add Bank Account&quot; or “Add Credit Card” bu [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.EmailTypes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.CustomerSupport">
            <summary>
              Looks up a localized string similar to CustomerSupport.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.DailyTodo">
            <summary>
              Looks up a localized string similar to DailyTodo.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.JoinOrganization">
            <summary>
              Looks up a localized string similar to JoinOrganization.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.L10Summary">
            <summary>
              Looks up a localized string similar to L10Summary.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.NewPrereviewIssued">
            <summary>
              Looks up a localized string similar to NewPrereviewIssued.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.NewReviewIssued">
            <summary>
              Looks up a localized string similar to NewReviewIssued.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.PaymentException">
            <summary>
              Looks up a localized string similar to PaymentException.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.QuarterlyConversationIssued">
            <summary>
              Looks up a localized string similar to QuarterlyConversationIssued.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.QuarterlyConversationReminder">
            <summary>
              Looks up a localized string similar to QuarterlyConversationReminder.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.Receipt">
            <summary>
              Looks up a localized string similar to Receipt.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.ResetPassword">
            <summary>
              Looks up a localized string similar to ResetPassword.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.ReviewReminder">
            <summary>
              Looks up a localized string similar to ReviewReminder.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.SurveyIssued">
            <summary>
              Looks up a localized string similar to SurveyIssued.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.EmailTypes.Test">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.ErrorMessageStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.minCharLength">
            <summary>
              Looks up a localized string similar to The {0} must be at least {2} characters long..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.newPasswordMatch">
            <summary>
              Looks up a localized string similar to The new password and confirmation password do not match..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.notAttached">
            <summary>
              Looks up a localized string similar to Not attached.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.noUserAttached">
            <summary>
              Looks up a localized string similar to No user attached.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.passwordMatch">
            <summary>
              Looks up a localized string similar to The password and confirmation password do not match..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ErrorMessageStrings.supplyAllFields">
            <summary>
              Looks up a localized string similar to You must supply all fields..
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.ExceptionStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.AlreadyMember">
            <summary>
              Looks up a localized string similar to You&apos;re already a member of this organization..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.AnErrorOccured">
            <summary>
              Looks up a localized string similar to An error has occurred..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.AnErrorOccuredContactUs">
            <summary>
              Looks up a localized string similar to An error has occurred. If the problem persists, please contact us..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.CategoryAccessability">
            <summary>
              Looks up a localized string similar to This category isn&apos;t accessible..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.DefaultExistanceException">
            <summary>
              Looks up a localized string similar to The resource you are looking for does not exist or was deleted..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.DefaultLoginException">
            <summary>
              Looks up a localized string similar to You must be logged in to view this page..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.DefaultOrganizationIdException">
            <summary>
              Looks up a localized string similar to Which organization are you referring to?.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.DefaultPermissionsException">
            <summary>
              Looks up a localized string similar to You do not have access to this resource..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.DefaultUnknownException">
            <summary>
              Looks up a localized string similar to An unknown exception occurred..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.InvalidEmail">
            <summary>
              Looks up a localized string similar to E-mail address is invalid..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.MustSpecifyAnImage">
            <summary>
              Looks up a localized string similar to You must specify an image..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.SomethingWentWrong">
            <summary>
              Looks up a localized string similar to Something went wrong. If the problem persists, please contact us..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ExceptionStrings.TimeoutException">
            <summary>
              Looks up a localized string similar to The request has timed out. If the problem persists, please contact us..
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.MandrillStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MandrillStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MandrillStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MandrillStrings.FromAddress">
            <summary>
              Looks up a localized string similar to support@bloomgrowth.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MandrillStrings.FromName">
            <summary>
              Looks up a localized string similar to Bloom Growth™.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MandrillStrings.SupportEmail">
            <summary>
              Looks up a localized string similar to support@bloomgrowth.com.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.MessageStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.areYouSureDelete">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete this?.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.helloUser">
            <summary>
              Looks up a localized string similar to Hello {0}!.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.InsufficientNumberOfMembers">
            <summary>
              Looks up a localized string similar to You need at least one member..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.NameRequired">
            <summary>
              Looks up a localized string similar to You must specify a name..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.Success">
            <summary>
              Looks up a localized string similar to Success!.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.SuccessfullyJoinedOrganization">
            <summary>
              Looks up a localized string similar to Successfully joined {0}..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.ThisWillSendAnEmailToSubordinates">
            <summary>
              Looks up a localized string similar to This will send an e-mail to your {0} subordinates..
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.User">
            <summary>
              Looks up a localized string similar to User.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.MessageStrings.Warning">
            <summary>
              Looks up a localized string similar to Warning!.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.ProductStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.Address">
            <summary>
              Looks up a localized string similar to 1201 Infinity Ct, Lincoln, NE 68512.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.BaseUrl2">
            <summary>
              Looks up a localized string similar to https://app.bloomgrowth.com/.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.Company">
            <summary>
              Looks up a localized string similar to Bloom Growth.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.CompanyName">
            <summary>
              Looks up a localized string similar to Bloom Growth.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.DefaultSoftwareUpdate">
            <summary>
              Looks up a localized string similar to &lt;div class=&quot;update update-current&quot;&gt;
            &lt;div class=&quot;head&quot;&gt;Version 2.4.0&lt;/div&gt;
            &lt;div class=&quot;su-details&quot;&gt;
            	&lt;h1&gt;Major Features&lt;/h1&gt;
            	&lt;blockquote&gt;
            		&lt;span class=&quot;su-row&quot;&gt;Organizational Chart Revamp&lt;/span&gt;
            		&lt;ul&gt;
            			&lt;li&gt;Cleaner UI, Improved UX, Faster&lt;/li&gt;
            			&lt;li&gt;View chart by levels&lt;/li&gt;
            			&lt;li&gt;Condensed Chart mode&lt;/li&gt;
            			&lt;li&gt;Descriptive buttons&lt;/li&gt;
            			&lt;li&gt;Search bar improved&lt;/li&gt;
            			&lt;li&gt;Moved editing seats to side panel&lt;/li&gt;
            			&lt;li&gt;Added Re-centering&lt;/li&gt;
            		&lt;/ul&gt;
            		&lt;span class=&quot;su-ro [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.EngineeringEmail">
            <summary>
              Looks up a localized string similar to tech@bloomgrowth.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.ErrorEmail">
            <summary>
              Looks up a localized string similar to clay@radialinc.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.MarketingUrl">
            <summary>
              Looks up a localized string similar to https://bloomgrowth.com/.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.PaymentExceptionEmail">
            <summary>
              Looks up a localized string similar to clay.upton@bloomgrowth.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.PaymentReceiptEmail">
            <summary>
              Looks up a localized string similar to payment-receipts@bloomgrowth.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.ProductName">
            <summary>
              Looks up a localized string similar to Bloom Growth.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.PurchaseEmail">
            <summary>
              Looks up a localized string similar to clay.upton@radialreview.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.PurchaseNumber">
            <summary>
              Looks up a localized string similar to 1-402-437-0098.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.SupportEmail">
            <summary>
              Looks up a localized string similar to help@bloomgrowth.com.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.ProductStrings.TestEmail">
            <summary>
              Looks up a localized string similar to clay.upton+test@radialreview.com.
            </summary>
        </member>
        <member name="T:RadialReview.Core.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.AppleAPS">
             <summary>
               Looks up a localized string similar to -----BEGIN CERTIFICATE-----
            MIIGZTCCBU2gAwIBAgIIFtzL5iDSegIwDQYJKoZIhvcNAQELBQAwgZYxCzAJBgNV
            BAYTAlVTMRMwEQYDVQQKDApBcHBsZSBJbmMuMSwwKgYDVQQLDCNBcHBsZSBXb3Js
            ZHdpZGUgRGV2ZWxvcGVyIFJlbGF0aW9uczFEMEIGA1UEAww7QXBwbGUgV29ybGR3
            aWRlIERldmVsb3BlciBSZWxhdGlvbnMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
            HhcNMTcxMjA0MDIxMTA4WhcNMTkwMTAzMDIxMTA4WjCBrTExMC8GCgmSJomT8ixk
            AQEMIW9yZy5UcmFjdGlvblRvb2xzLlRyYWN0aW9uVG9vbHNWMTE/MD0GA1UEAww2
            QXBwbGUgUHVzaCBTZXJ2aWNlczogb3JnLlRyYWN0aW9uVG9vbHMuVHJhY3Rpb25U
            b29sc1YxMRMwEQYDVQQLD [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.APS">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.Checked">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.closed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.EOS_Model">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.nickname">
             <summary>
               Looks up a localized string similar to aaron,erin,ronnie,ron
            abbie,abigail
            abby,abigail
            abe,abraham,abram
            abednego,bedney
            abel,ebbie,ab,abe,eb
            abiel,ab
            abigail,nabby,abby,gail
            abijah,ab,bige
            abner,ab
            abraham,ab,abe
            abram,ab
            absalom,app,ab,abbie
            ada,addy
            adaline,delia,lena,dell,addy,ada
            adam,edie,ade
            addy,adele
            adela,della
            adelaide,heidi,adele,dell,addy,della
            adelbert,del,albert,delbert,bert
            adele,dell
            adeline,delia,lena,dell,addy,ada
            adelphia,philly,delphia,adele,dell,addy
            adolphus,dolph,ado,adolph
            adrian,rian
            adrienne,a [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.Star">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RadialReview.Core.Properties.Resources.Unchecked">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:RadialReview.Core.Utilities.Encrypt.Fnv1a128.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RadialReview.Core.Utilities.Encrypt.Fnv1a128"/> class.
            </summary>
            <exception cref="T:System.ArgumentException">style is not a
            <see cref="T:System.Globalization.NumberStyles"></see> value.   -or-  style includes the
            <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier"></see> or <see cref="F:System.Globalization.NumberStyles.HexNumber"></see> flag along with another
            value.</exception>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.FormatException">value does not comply with the input pattern specified by
            style.</exception>
        </member>
        <member name="T:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase">
            <inheritdoc />
            <summary>
            Implements the FNV-1a variant hashing algorithm for subtypes using the BigInteger class.
            </summary>
        </member>
        <member name="F:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase._modValue">
            <summary>
            The "wrap-around" modulo value for keeping multiplication within the number of bits.
            </summary>
        </member>
        <member name="F:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase._prime">
            <summary>
            The prime.
            </summary>
        </member>
        <member name="F:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase._offsetBasis">
            <summary>
            The non-zero offset basis.
            </summary>
        </member>
        <member name="F:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase._hash">
            <summary>
            The hash.
            </summary>
        </member>
        <member name="M:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase.#ctor(System.Numerics.BigInteger@,System.Numerics.BigInteger@,System.Numerics.BigInteger@,System.Int32@)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase"/> class.
            </summary>
            <param name="modValue">The "wrap-around" modulo value for keeping multiplication within the number of
            bits.</param>
            <param name="prime">The FNV-1a prime.</param>
            <param name="offsetBasis">The FNV-1a offset basis.</param>
            <param name="hashSizeValue">The size, in bits, of the computed hash code.</param>
        </member>
        <member name="M:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase.Initialize">
            <inheritdoc />
            <summary>
            Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.
            </summary>
        </member>
        <member name="M:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase.HashCore(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
            <summary>
            When overridden in a derived class, routes data written to the object into the hash algorithm for computing
            the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="ibStart">The offset into the byte array from which to begin using data.</param>
            <param name="cbSize">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase.HashFinal">
            <inheritdoc />
            <summary>
            When overridden in a derived class, finalizes the hash computation after the last data is processed by the
            cryptographic stream object.
            </summary>
            <returns>
            The computed hash code.
            </returns>
        </member>
        <member name="M:RadialReview.Core.Utilities.Encrypt.Fnv1aBigBase.Init">
            <summary>
            Initializes the hash for this instance.
            </summary>
        </member>
        <member name="M:RadialReview.Core.Utilities.ForceIndexInterceptor.SetForceIndexHint(NHibernate.ISession,System.String)">
            <summary>
            Needs to be called immediately before it is used.
            may cause issues if there are multiple instances of the class name in the query
            The query you are updating ought to be marked "Future" even if you plan to execute it imediately afterwards
            
            </summary>
            <param name="s"></param>
            <param name="className"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:RadialReview.Core.Utilities.Reports.ReportHelpers.Point.X">
            <summary>
            Use utc time
            </summary>
        </member>
        <member name="T:RadialReview.Core.Utilities.Types.TOptional`1">
            <summary>
            A custom implementation of an optional value type similar to the Optional type provided by the Hot Chocolate library.
            This class has been created to ensure that the Accessor classes remains independent of the Optional type from the Hot Chocolate package.
            By using TOptional instead of Optional, the Accessor class can maintain its functionality without tightly coupling to the Hot Chocolate library.
            </summary>
        </member>
        <member name="M:RadialReview.Core.Utilities.Types.TypeParser.ConvertToValidNullable``1(System.String)">
            <summary>
            Converts the input string to a valid nullable value of the specified type.
            If the input is null, returns null. If the input cannot be parsed to the specified
            type, throws a NotSupportedException.
            </summary>
            <typeparam name="T">The target value type.</typeparam>
            <param name="input">The input string to be converted.</param>
            <returns>A nullable value of the specified type if conversion is successful; otherwise, null.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the input cannot be parsed to the specified type.</exception>
        </member>
        <member name="P:RadialReview.Api.TitleModel.title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:RadialReview.Api.NameModel.name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:RadialReview.Api.test.RadialReview.Api.InvalidNamespace.SanityCheckUnsetNamespaceController.Sanity">
            <summary>
            I should only appear when running locally, I belong in the [FAILED TO MAP NAMESPACE TO VERSION] document (which also only appears locally)
            Other endpoints that are mapped incorrectly will be in this document too. Please fix their namespaces before releasing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V0.WeekController.Get">
            <summary>
            Get the current week
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V0.ScoresController.Get(System.Int64)">
            <summary>
            Get a particular score
            </summary>
            <param name = "SCORE_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V0.ScoresController.Put_OLD(System.Int64,System.Int64,System.Nullable{System.Decimal})">
            <summary>
            Update a score for a particular measureable
            </summary>
            <param name = "MEASURABLE_ID">Measurable ID</param>
            <param name = "WEEK_ID">Week ID</param>
            <param name = "value">Value for the score</param>
        </member>
        <member name="M:RadialReview.Api.V0.ScoresController.Put(System.Int64,System.Int64,System.Nullable{System.Decimal})">
            <summary>
            Update a score for a particular measureable
            </summary>
            <param name = "MEASURABLE_ID">Measurable ID</param>
            <param name = "WEEK_ID">Week ID</param>
            <param name = "value">Value for the score</param>
        </member>
        <member name="M:RadialReview.Api.V0.ScoresController.Put(System.Int64,System.Nullable{System.Decimal})">
            <summary>
            Update a score
            </summary>
            <param name = "SCORE_ID">Score ID</param>
            <param name = "value">Value for the score</param>
        </member>
        <member name="M:RadialReview.Api.V0.UsersController.GetUserPositions(System.Int64,System.Boolean)">
            <summary>
            Get the positions for a user
            </summary>
            <param name = "userId">The user's id</param>
            <param name = "includeUnnamed">Include unnamed positions. Default: false</param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Api.V1.SeatsController">
            <summary>
            Seats are boxes on the organizational chart. A user can occupy more than one seat on the organizational chart.
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.AttachDirectReport(System.Int64,System.Int64)">
            <summary>
            Add a user below a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetSeat(System.Int64)">
            <summary>
            Get a particular seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.RemoveSeat(System.Int64)">
            <summary>
            Delete a seat from the organizational chart
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetPosition(System.Int64)">
            <summary>
            Get the position attached to a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.AttachPosition(System.Int64,System.Int64)">
            <summary>
            Set the position for a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <param name = "POSITION_ID">Position ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.SetPosition(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Set the position for a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <param name = "title">Position Title</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.RemovePosition(System.Int64)">
            <summary>
            Remove position for a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetSeatUser(System.Int64)">
            <summary>
            Get the user for a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetSeatUsers(System.Int64)">
            <summary>
            Get the users for a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.AttachUser(System.Int64,System.Int64)">
            <summary>
            Set a user for a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <param name = "USER_ID">User ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.DetachUser(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Remove user from a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <param name = "USER_ID">User ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetSeatsForUser(System.Int64)">
            <summary>
            Get seats for a user
            </summary>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetSeatsForMe">
            <summary>
            Get your seats 
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.GetRolesForSeat(System.Int64)">
            <summary>
            Get roles from a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.SeatsController.AddRole(System.Int64,RadialReview.Api.NameModel)">
            <summary>
            Create a role from a seat
            </summary>
            <param name = "SEAT_ID">Seat ID</param>
            <param name = "body">name</param>
        </member>
        <member name="M:RadialReview.Api.V1.RoleController.GetRoles(System.Int64)">
            <summary>
            Get a particular role
            </summary>
            <param name = "ROLE_ID"></param>
            <returns>The specified role</returns>
        </member>
        <member name="M:RadialReview.Api.V1.RoleController.UpdateRoles(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Update a seat's role
            </summary>
            <param name = "ROLE_ID"></param>
            <param name = "title">Updated role</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RoleController.RemoveRole(System.Int64)">
            <summary>
            Remove a role from a seat
            </summary>
            <param name = "ROLE_ID">Role ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RoleController.RestoreRole(System.Int64)">
            <summary>
            Restore a role from a position
            </summary>
            <param name = "ROLE_ID">Role ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.PositionController.GetMinePosition">
            <summary>
            List all your positions at the organization
            </summary>
            <returns>A list of your positions</returns>
        </member>
        <member name="M:RadialReview.Api.V1.PositionController.GetPositionRoles(System.Int64)">
            <summary>
            Get a list of roles for a particular position
            </summary>
            <param name = "POSITION_ID"></param>
        </member>
        <member name="M:RadialReview.Api.V1.PositionController.AddPositionRoles(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Create a role for a position
            </summary>
            <param name = "POSITION_ID">Position ID</param>
            <param name = "body">Role title</param>
            <returns>The created role</returns>
        </member>
        <member name="M:RadialReview.Api.V1.PositionController.CreatePosition(RadialReview.Api.TitleModel)">
            <summary>
            Create a new position
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.PositionController.GetPositions(System.Int64)">
            <summary>
            Get a particular position
            </summary>
            <param name = "POSITION_ID">Position ID</param>
            <returns>The specified position</returns>
        </member>
        <member name="M:RadialReview.Api.V1.PositionController.UpdatePositions(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Update a position
            </summary>
            <param name = "POSITION_ID">Position ID</param>
            <param name = "body">Position name</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.HeadlinesController.GetNotes(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Get a URL with the Notes Pad for a specific headline
            </summary>
            <param name="HEADLINE_ID"></param>
            <param name="showControls"></param>
            <param name="readOnly"></param>
        </member>
        <member name="M:RadialReview.Api.V1.HeadlinesController.GetHeadline(System.Int64,System.Boolean)">
            <summary>
            Get a specific headline
            </summary>
            <param name = "HEADLINE_ID">headline ID</param>
            <returns>The headline</returns>
        </member>
        <member name="M:RadialReview.Api.V1.HeadlinesController.UpdateHeadlines(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Update a Headline
            </summary>
            <param name = "HEADLINE_ID">Headline ID</param>
            <param name = "body">Updated title</param>
        </member>
        <member name="M:RadialReview.Api.V1.HeadlinesController.RemoveHeadlines(System.Int64)">
            <summary>
            Delete a headline
            </summary>
            <param name = "HEADLINE_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.HeadlinesController.GetUserHeadlines(System.Int64,System.Boolean)">
            <summary>
            Get all headlines owned by a user.
            </summary>
            <param name = "USER_ID"></param>
            <returns>List of the user's headlines</returns>
        </member>
        <member name="M:RadialReview.Api.V1.HeadlinesController.GetMineHeadlines(System.Boolean)">
            <summary>
            Get headlines you own
            </summary>		
            <returns>List of the headlines own by you</returns>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.CreateIssueModel.meetingId">
            <summary>
            Weekly meeting ID
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.CreateIssueModel.title">
            <summary>
            Title for the issue
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.CreateIssueModel.ownerId">
            <summary>
            Owner's user ID (Default: you)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.CreateIssueModel.notes">
            <summary>
            Optional issue notes (Default: none)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.UpdateIssueModelCompletion.complete">
            <summary>
            Set the issue completion
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.UpdateIssueModel.title">
            <summary>
            Title for the issue
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.UpdateIssueModel.ownerId">
            <summary>
            Owner's user ID
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.IssuesController.UpdateIssueModel.compartment">
            <summary>
            The compartment this issue belongs to. Short Term = Weekly Meeting, Long Term = V/TO 
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.CreateIssue(RadialReview.Api.V1.IssuesController.CreateIssueModel)">
            <summary>
            Create a new issue in for a Weekly Meeting
            </summary>
            <returns>The created issue</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.MoveToVto(System.Int64)">
            <summary>
            Move issue to VTO
            </summary>
            <returns>HTTP response 200</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.MoveFromVto(System.Int64)">
            <summary>
            Move issue from VTO
            </summary>
            <returns>HTTP response 200</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.MoveToMeeting(System.Int64,System.Int64)">
            <summary>
            Move issue to another meeting
            </summary>
            <returns>HTTP response 200</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.Complete(System.Int64,RadialReview.Api.V1.IssuesController.UpdateIssueModelCompletion)">
            <summary>
            Mark issue as completed
            </summary>
            <returns>HTTP response 200</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.EditIssue(System.Int64,RadialReview.Api.V1.IssuesController.UpdateIssueModel)">
            <summary>
            Update an issue
            </summary>
            <param name = "ISSUE_ID">Issue ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.Get(System.Int64)">
            <summary>
            Get a specific issue
            </summary>
            <param name = "ISSUE_ID">Issue ID</param>
            <returns>The specified issue</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.GetMineIssues">
            <summary>
            Get all issues you own.
            </summary>
            <returns>List of your issues</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.GetUserIssues(System.Int64)">
            <summary>
            Get all issues owned by a user.
            </summary>
            <param name = "USER_ID"></param>
            <returns>List of the user's issues</returns>
        </member>
        <member name="M:RadialReview.Api.V1.IssuesController.GetNotes(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Get a URL with the Notes Pad for a specific issue
            </summary>
            <param name="ISSUE_ID"></param>
            <param name="showControls"></param>
            <param name="readOnly"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Api.V1.L10Controller">
            <summary>
            Create or update a Weekly Meeting
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateMeeting.title">
            <summary>
            Meeting Name
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateMeeting.addSelf">
            <summary>
            Add yourself to the meeting (Default: false)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.CreateL10(RadialReview.Api.V1.L10Controller.CreateMeeting)">
            <summary>
            Create a new weekly meeting.
            </summary>
            <returns>The meeting ID</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.EditL10(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Update a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "body">Updated meeting name</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.RemoveL10(System.Int64)">
            <summary>
            Delete a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.AttachMeasurableL10(System.Int64,System.Int64)">
            <summary>
            Add an existing metric measurable to a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "MEASURABLE_ID">Metric measurable ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.RemoveMeasurableL10(System.Int64,System.Int64)">
            <summary>
            Remove a metric from a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "MEASURABLE_ID">Metric measurable ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.AttachRockMeetingL10(System.Int64,System.Int64)">
            <summary>
            Add an existing goal to a Level 10 meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "ROCK_ID">Rock ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.RemoveRockL10(System.Int64,System.Int64)">
            <summary>
            Remove a goal from a Level 10 meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "ROCK_ID">Rock ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.AddRockToBusinessPlan(System.Int64,System.Int64)">
            <summary>
            Add rock to business plan
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "ROCK_ID">Rock ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.RemoveRockFromBusinessPlan(System.Int64,System.Int64)">
            <summary>
            Remove rock from business plan
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "ROCK_ID">Rock ID</param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateTodo.title">
            <summary>
            To-do title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateTodo.details">
            <summary>
            To-do notes (Default: none)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateTodo.accountableUserId">
            <summary>
            Accountable user (Default: you)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateTodo.dueDate">
            <summary>
            To-do due date (Default: 7 days)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.CreateTodoL10(System.Int64,RadialReview.Api.V1.L10Controller.CreateTodo)">
            <summary>
            Add a to-do to a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "body">To-do title, owner, due date</param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateIssue.title">
            <summary>
            Issue title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateIssue.ownerId">
            <summary>
            Owner Id (Default: you)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateIssue.details">
            <summary>
            Issue details (Default: none)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.CreateIssueL10(System.Int64,RadialReview.Api.V1.L10Controller.CreateIssue)">
            <summary>
            Add an issue to a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "body">Issue title, owner, details</param>
            <returns>The created issue</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.RemoveIssueL10(System.Int64,System.Int64)">
            <summary>
            Remove an issue from a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "ISSUE_ID">Issue ID</param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateHeadline.title">
            <summary>
            Headline title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateHeadline.ownerId">
            <summary>
            Owner Id (Default: you)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateHeadline.notes">
            <summary>
            Optional headline notes (Default: none)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.CreateHeadlineL10(System.Int64,RadialReview.Api.V1.L10Controller.CreateHeadline)">
            <summary>
            Create a headline for a Level 10 meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "body">Headline title, ovwer, details</param>
            <returns>The created headline</returns>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateRockModel.title">
            <summary>
            Goal name
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.L10Controller.CreateRockModel.accountableUserId">
            <summary>
            Goal owner (Default: you)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.CreateRockL10(System.Int64,RadialReview.Api.V1.L10Controller.CreateRockModel)">
            <summary>
            Create a new goal and move it to L10 meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "body">Goal title, owner</param>
            <returns>The created goal</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.RemoveHeadlineL10(System.Int64,System.Int64)">
            <summary>
            Remove a headline from a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "HEADLINE_ID">Headline ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetL10(System.Int64)">
            <summary>
            Get information about a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <returns>The weekly meeting</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetL10Attendees(System.Int64)">
            <summary>
            Get a list of attendees
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <returns>A list of attendee users</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.AddAttendee(System.Int64,System.Int64)">
            <summary>
            Add an existing user to a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetL10List">
            <summary>
            Get a list of weekly meetings
            </summary>
            <returns>A list of meetings</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetUserL10List(System.Int64)">
            <summary>
            Get list of Weekly Meetings attended by a particular user
            </summary>
             /// <param name = "USER_ID">User Id</param>
            <returns>A list of meetings</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetRecurrenceIssues(System.Int64,System.Boolean)">
            <summary>
            Get a list of issues for a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting Id</param>
            <param name = "INCLUDE_RESOLVED">Issue Status whether solved or unresolve (Default: false)</param>
            <returns>List of issues</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetRecurrenceLongTermIssues(System.Int64)">
            <summary>
            Get list of long term issues for a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting Id</param>
            <returns>List of long term issues</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetUserIssues(System.Int64,System.Int64)">
            <summary>
            Get a list of issues in a weekly meeting for a particular user
            </summary>
            <param name = "MEETING_ID"></param>
            <param name = "USER_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetRecurrenceTodos(System.Int64,System.Boolean)">
            <summary>
            Get a list of to-dos in a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "INCLUDE_CLOSED">Todo Status whether closed or open (Default: false)</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetUserTodos(System.Int64,System.Int64)">
            <summary>
            Get a list of todos in a weekly meeting for a particular user
            </summary>
            <param name = "MEETING_ID"></param>
            <param name = "USER_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetRecurrenceHeadlines(System.Int64,System.Boolean)">
            <summary>
            Get a list of headlines in a Level 10 meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetUserHeadlines(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Get a list of headlines in a weekly meeting for a particular user
            </summary>
            <param name = "MEETING_ID"></param>
            <param name = "USER_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetUserRocks(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Get a list of goals in a Level 10 meeting for a particular user
            </summary>
            <param name = "MEETING_ID"></param>
            <param name = "USER_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetL10Rocks(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Get list of L10 goals
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <param name = "INCLUDE_ARCHIVE">Include Archive  (Default: false)</param>
            <returns>A list of company goals</returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetRecurrenceMeasurables(System.Int64)">
            <summary>
            Get a list of measurables in a weekly meeting
            </summary>
            <param name = "MEETING_ID">Meeting ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.L10Controller.GetUserMeasurables(System.Int64,System.Int64)">
            <summary>
            Get a list of measurables in a weekly meeting for a particular user
            </summary>
            <param name = "MEETING_ID"></param>
            <param name = "USER_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.NotificationController.GetNotification(System.Int64)">
            <summary>
            Get a specific notification
            </summary>
            <param name = "NOTIFICATION_ID">Notification ID</param>
            <returns>The headline</returns>
        </member>
        <member name="P:RadialReview.Api.V1.NotificationController.NotificationStatusModel.status">
            <summary>
            Notification status
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.NotificationController.Status(System.Int64,RadialReview.Api.V1.NotificationController.NotificationStatusModel)">
            <summary>
            Set notification status
            </summary>
            <param name = "NOTIFICATION_ID">Notification ID</param>
            <returns>The headline</returns>
        </member>
        <member name="M:RadialReview.Api.V1.NotificationController.List(System.Boolean)">
            <summary>
            Get a list of notifications
            </summary>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.PostQuarterController.CreateNewQuarterModel.name">
            <summary>
            New Quarter title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.PostQuarterController.CreateNewQuarterModel.quarterenddate">
            <summary>
            New Quarter date
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.PostQuarterController.CreateNewQuarterModel.meetingId">
            <summary>
            Meeting ID
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.PostQuarterController.Create(RadialReview.Api.V1.PostQuarterController.CreateNewQuarterModel)">
            <summary>
            Create a new post quarter
            </summary>
            <returns>HTTP response 200</returns>        
        </member>
        <member name="P:RadialReview.Api.V1.ProcessController.CompleteStepModel.completion">
            <summary>
            Completion
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.StartProcess(System.Int64)">
            <summary>
            Start a process
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.CompleteStep(System.Int64,RadialReview.Api.V1.ProcessController.CompleteStepModel)">
            <summary>
            Update step completion
            </summary>
            <param name = "STEP_ID">Step ID</param>
            <param name = "body"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.GetProcessList(System.Nullable{System.Int64})">
            <summary>
            Get a list of processes
            </summary>
            <param name = "FOLDER_ID">Filter by folder id</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.GetProcessFolderList">
            <summary>
            Get a list of process folders
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.GetProcess(System.Int64)">
            <summary>
            Get a process
            </summary> 
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.GetProcessStepList(System.Int64)">
            <summary>
            Get steps for a process
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.ProcessController.GetProcessExecutionStepList(System.Int64)">
            <summary>
            Get steps for an started process
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetNotes(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Get a URL with the Notes Pad for an specific rock
            </summary>
            <param name="ROCK_ID"></param>
            <param name="showControls"></param>
            <param name="readOnly"></param>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetYourRocks(System.Boolean)">
            <summary>
            Get a list of your goals
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetYourArchivedRocks">
            <summary>
            Get a list of your archived goals
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetRocksMilestones(System.Int64)">
            <summary>
            Get milestones for a particular goal
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns>List of milestones</returns>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.CreateMilestoneModel.title">
            <summary>
            Milestone title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.CreateMilestoneModel.dueDate">
            <summary>
            Milestone due date
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.AddRocksMilestones(System.Int64,RadialReview.Api.V1.RocksController.CreateMilestoneModel)">
            <summary>
            Add a milestone to a particular goal
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.CreateRockModel.title">
            <summary>
            Goal name
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.CreateRockModel.accountableUserId">
            <summary>
            Goal owner (Default: you)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.CreateRock(RadialReview.Api.V1.RocksController.CreateRockModel)">
            <summary>
            Create a new goal
            </summary>
            <param name = "body"></param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.UpdateRockModel.title">
            <summary>
            Goal name
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.UpdateRockModel.accountableUserId">
            <summary>
            Goal owner (Default: you)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.RocksController.UpdateRockModel.completion">
            <summary>
            Goal completion status
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.UpdateRocks(System.Int64,RadialReview.Api.V1.RocksController.UpdateRockModel)">
            <summary>
            Update a goal
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.DeleteRocks(System.Int64)">
            <summary>
            Delete a goal
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetRocksForUser(System.Int64,System.Boolean)">
            <summary>
            Get a list of goals for a user
            </summary>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetArchivedRocksForUser(System.Int64)">
            <summary>
            Get a list of archived rocks for a user
            </summary>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.RestoreRock(System.Int64)">
            <summary>
            Restore a goal from the archive
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.ArchiveRock(System.Int64)">
            <summary>
            Archive the goal
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.RocksController.GetRock(System.Int64,System.Boolean)">
            <summary>
            Get a specific goal
            </summary>
            <param name = "ROCK_ID">Goal ID</param>
            <returns>The specified goal</returns>
        </member>
        <member name="M:RadialReview.Api.V1.MilestonesController.GetMilestones(System.Int64)">
            <summary>
            Get a particular milestone
            </summary>
            <param name = "MILESTONE_ID">Milestone ID</param>
            <returns>The specified milestone</returns>
        </member>
        <member name="P:RadialReview.Api.V1.MilestonesController.UpdateMilestoneModel.title">
            <summary>
            Milestone title (Default: unchanged)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.MilestonesController.UpdateMilestoneModel.dueDate">
            <summary>
            Milestone due date (Default: unchanged)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.MilestonesController.UpdateMilestoneModel.status">
            <summary>
            Milestone status (Default: unchanged)
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.MilestonesController.UpdateMilestones(System.Int64,RadialReview.Api.V1.MilestonesController.UpdateMilestoneModel)">
            <summary>
            Update a milestone
            </summary>
            <param name = "MILESTONE_ID">Milestone ID</param>
            <param name = "body"></param>
        </member>
        <member name="M:RadialReview.Api.V1.MilestonesController.RemoveMilestones(System.Int64)">
            <summary>
            Delete a milestone
            </summary>
            <param name = "MILESTONE_ID">Milestone ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.Week_Controller.Get">
            <summary>
            Get the current week
            </summary>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.Scores_Controller.UpdateMeasurableModel.name">
            <summary>
            The name of the measurable
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.Scores_Controller.CreateMeasurableModel.name">
            <summary>
            Measurable name
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.Scores_Controller.CreateMeasurableModel.accountableUserId">
            <summary>
            Measurable owner (Default: you)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.Scores_Controller.UpdateScoreModel.value">
            <summary>
            The score's new value. If null, score is deleted.
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.Scores_Controller.Put(System.Int64,RadialReview.Api.V1.Scores_Controller.UpdateScoreModel)">
            <summary>
            Update a score
            </summary>
            <param name = "SCORE_ID">Score ID</param>
        </member>
        <member name="M:RadialReview.Api.V1.Scores_Controller.Get(System.Int64,System.Boolean)">
            <summary>
            Get a particular score
            </summary>
            <param name = "SCORE_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.CreateMeasurable(RadialReview.Api.V1.Scores_Controller.CreateMeasurableModel)">
            <summary>
            Create a new measurable
            </summary>
            <param name = "body"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.UpdateScore(System.Int64,System.Int64,RadialReview.Api.V1.Scores_Controller.UpdateScoreModel)">
            <summary>
            Update a score for a particular measureable
            </summary>
            <param name = "MEASURABLE_ID">Measurable ID</param>
            <param name = "WEEK_ID">Week ID</param>
            <param name="body"></param>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.UpdateMeasurable(System.Int64,RadialReview.Api.V1.Scores_Controller.UpdateMeasurableModel)">
            <summary>
            Update a measureable
            </summary>
            <param name = "MEASURABLE_ID">Measurable ID</param>
            <param name="body"></param>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.GetMineMeasureables(System.Boolean)">
            <summary>
            Get measurables that you own
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.GetUserMeasureables(System.Int64,System.Boolean)">
            <summary>
            Get measurables for a particular user
            </summary>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.GetMeasurableScores(System.Int64,System.Boolean)">
            <summary>
            Get scores for a particular measurable
            </summary>
            <param name = "MEASURABLE_ID">Measurable ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Measurables_Controller.Get(System.Int64,System.Boolean)">
            <summary>
            Get a measurable
            </summary>
            <param name = "MEASURABLE_ID">Measurable ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.SearchController.Search(System.String)">
            <summary>
            Search for users, positions, or teams by name
            </summary>
            <param name = "term">Search term</param>
            <returns>A list of results</returns>
        </member>
        <member name="M:RadialReview.Api.V1.SearchController.SearchUser(System.String)">
            <summary>
            Search for users
            </summary>
            <param name = "term">Search term</param>
            <returns>A list of results</returns>
        </member>
        <member name="M:RadialReview.Api.V1.TeamsController.AddTeam(RadialReview.Api.TitleModel)">
            <summary>
            Create a new team
            </summary>
            <param name = "body"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TeamsController.GetTeams(System.Int64)">
            <summary>
            Get a particular team
            </summary>
            <param name = "TEAM_ID">Team ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TeamsController.UpdateTeam(System.Int64,RadialReview.Api.TitleModel)">
            <summary>
            Update a team
            </summary>
            <param name = "TEAM_ID">Team ID</param>
            <param name = "body"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TeamsController.GetTeamMembers(System.Int64)">
            <summary>
            Get team members
            </summary>
            <param name = "TEAM_ID"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TeamsController.AddTeamMember(System.Int64,System.Int64)">
            <summary>
            Add a user to a team
            </summary>
            <param name = "TEAM_ID">Team ID</param>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TeamsController.RemoveTeamMember(System.Int64,System.Int64)">
            <summary>
            Remove a team member
            </summary>
            <param name = "TEAM_ID">Team ID</param>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Api.V1.TodosController.CreateTodoModel.title">
            <summary>
            To-do title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.TodosController.CreateTodoModel.notes">
            <summary>
            Optional notes 
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.TodosController.CreateTodoModel.dueDate">
            <summary>
            To-do due date (Default: 7 days)
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.TodosController.UpdateTodoModel.title">
            <summary>
            To-do title
            </summary>
        </member>
        <member name="P:RadialReview.Api.V1.TodosController.UpdateTodoModel.dueDate">
            <summary>
            To-do due date
            </summary>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.CreateTodo(RadialReview.Api.V1.TodosController.CreateTodoModel)">
            <summary>
            Create a personal to-do
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.EditTodo(System.Int64,RadialReview.Api.V1.TodosController.UpdateTodoModel)">
            <summary>
            Update a to-do
            </summary>
            <param name = "TODO_ID">Todo ID</param>
            <param name = "body"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.MarkComplete(System.Int64,System.Boolean)">
            <summary>
            Update the completion of a to-do
            </summary>
            <param name = "TODO_ID">Todo ID</param>
            <param name = "status">Is completed (Default: true)</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.Get(System.Int64)">
            <summary>
            Get a particular to-do
            </summary>
            <param name = "TODO_ID">Todo ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.GetMineTodos">
            <summary>
            Get your to-dos
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.GetUserTodos(System.Int64)">
            <summary>
            Get to-dos for a user
            </summary>
            <param name = "USER_ID">User ID</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.TodosController.GetNotes(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Get a URL with the Notes Pad for a specific To-do
            </summary>
            <param name="TODO_ID"></param>
            <param name="showControls"></param>
            <param name="readOnly"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Users_Controller.GetDirectReports(System.Int64)">
            <summary>
            Get direct reports for a particular user
            </summary>        
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Users_Controller.GetMineDirectReports">
            <summary>
            Get my direct reports 
            </summary>        
            <returns></returns>
        </member>
        <member name="M:RadialReview.Api.V1.Users_Controller.GetMineViewable">
            <summary>
            Get all viewable users
            </summary>        
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Accessors.PDF.PeopleAnalyzerPdf.AddDiagonalText(MigraDoc.Rendering.DocumentRenderer,MigraDoc.Rendering.PdfDocumentRenderer,RadialReview.Accessors.PDF.PdfSettings,System.Collections.Generic.List{MigraDoc.DocumentObjectModel.Tables.Cell},PdfSharp.Drawing.XFont,System.Double)">
            <summary>
            A hack to draw low level text on the PDF
            </summary>
            <param name="docRenderer"></param>
            <param name="renderer"></param>
            <param name="taggedCells"></param>
            <param name="font"></param>
            <param name="angleDeg"></param>
        </member>
        <member name="M:RadialReview.Areas.People.Accessors.PDF.PeopleAnalyzerPdf.GetTaggedCells(MigraDoc.Rendering.DocumentRenderer)">
            <summary>
            Grab all the cells that require diagonal text in them
            </summary>
            <param name="docRenderer"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Accessors.PDF.PeopleAnalyzerPdf.LookupCell(RadialReview.Areas.People.Angular.AngularPeopleAnalyzer,RadialReview.Areas.People.Angular.AngularPeopleAnalyzerRow,RadialReview.Models.Interfaces.IForModel,System.Nullable{System.DateTime})">
            <summary>
            Grab the data to display in a particular cell, given a (row,question) pair
            MaxDate specified the range of QC data to use, IE QC IssueDates up to and including maxDate
            </summary>
            <param name="pa"></param>
            <param name="row"></param>
            <param name="question"></param>
            <param name="maxDate"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Accessors.PDF.PeopleAnalyzerPdf.AppendPeopleAnalyzer(RadialReview.Utilities.DataTypes.ITimeData,RadialReview.Core.Models.Terms.TermsCollection,MigraDoc.DocumentObjectModel.Document,RadialReview.Areas.People.Angular.AngularPeopleAnalyzer,RadialReview.Accessors.PDF.PdfSettings,System.Nullable{System.DateTime})">
            <summary>
            Adds a People analyzer to the PDF. Please note, don't render the "Doc", instead render the return result
            </summary>
            <param name="caller"></param>
            <param name="doc"></param>
            <param name="pa"></param>
            <param name="beforeDate"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Areas.People.Accessors.QuarterlyConversationAccessor.QuarterlyConversationGeneration">
            <summary>
            Converts the By's to UserOrganizationModels
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Impl.QuarterlyConversation.Sections.RockSection.#ctor(RadialReview.Utilities.DataTypes.DateRange,RadialReview.Core.Models.Terms.TermsCollection,System.Double,System.Double,RadialReview.Areas.People.Engines.Surveys.Impl.QuarterlyConversation.Sections.RockSection.LookupMethods)">
            <summary>
            Pass in the full range of the quarter. It automatically trims the range.
            
            
            It uses an inner range to prevent things deleted shortly after the beginning of the quarter
            
                start = 7 days after qtr start
                end = 21 days before qtr end
                
                            +==============QTR==============+
                            |                               |
            -----------*-*-*-*-*----|=====Range=====|----------------------
                       ^ Goals Created
            
            
               -------------Created-----------------+
                                                    |
                                    o=====Range=====o
                                    |
                                    +-----------------------Deleted--------------------------->
                                                    
            </summary>
        </member>
        <member name="T:RadialReview.Areas.People.Engines.Surveys.Interfaces.IOuterLookup">
            <summary>
            Provides a "static" lookup for all components in the survey.
            Used during prequerying and testing.
            </summary>
        </member>
        <member name="T:RadialReview.Areas.People.Engines.Surveys.Interfaces.IInnerLookup">
            <summary>
            Provides a "static" lookup for a particular component in the survey
            </summary>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.IItemFormatInitializerCtx.RegistrationItemFormat(System.Boolean,System.Func{RadialReview.Areas.People.Engines.Surveys.Interfaces.IItemFormat},System.String)">
            <summary>
            Registers the ItemFormat. If in register, it will only initialize one copy of this format
            </summary>
            <param name="useRegistry">if true, save a copy to the Lookup and reference for the rest of the survey.</param>
            <param name="formatGenerator"></param>
            <param name="interClassIdentifier">If you need to distinguish multiple ItemFormats within the same class, use this optional key</param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.ISection.GetSectionMergerKey">
            <summary>
            When merging survey's on the About field, use this field to merge sections across the SurveyContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.IItemContainer.GetItemMergerKey">
            <summary>
            When merging survey's on the About field, use this field to merge items across the SurveyContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.IItem.GetItemMergerKey">
            <summary>
            When merging survey's on the About field, use this field to merge items across the SurveyContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.IItemFormatRegistry.ShouldInitialize">
            <summary>
            Indicates that a key should be saved
            </summary>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.ISectionAbout.GetSectionMergerKey">
            <summary>
            When merging survey's on the About field, use this field to merge sections across the SurveyContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Areas.People.Engines.Surveys.Interfaces.IItemContainerAbout.GetItemMergerKey">
            <summary>
            When merging survey's on the About field, use this field to merge items across the SurveyContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Areas.People.Engines.Surveys.SurveyBuilderEngine">
            <summary>
            INSTRUCTIONS:
            
            Create a CustomSurveyContainer class implementing the ISurveyInitializer and populate the interface.
            
            </summary>
        </member>
        <member name="M:RadialReview.Crosscutting.CronJobs.TodoEmailsScheduler._ConstructTodoEmails(RadialReview.Middleware.Services.NotesProvider.INotesProvider,System.Int32,NHibernate.ISession,System.DateTime,Microsoft.Extensions.Logging.ILogger{RadialReview.Crosscutting.CronJobs.TodoEmailsScheduler},System.Int32,System.Int32)">
            <summary>
            remainder less than divisor
            </summary>
        </member>
        <member name="M:RadialReview.Crosscutting.EventAnalyzers.Events.MemberwiseTodoCompletion.GenerateEvents(RadialReview.Crosscutting.EventAnalyzers.Interfaces.IEventSettings)">
            <summary>
            Gives the todo completion % for meeting whose event time coinsides with the complete time.
            </summary>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Crosscutting.EventAnalyzers.Interfaces.EventProcessor.ShouldTrigger(System.Collections.Generic.IEnumerable{RadialReview.Crosscutting.EventAnalyzers.Interfaces.IEvent},RadialReview.Crosscutting.EventAnalyzers.Interfaces.IThreshold,System.Int32,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            When lastCheck is null, only trigger on the last event
            </summary>
            <param name="events"></param>
            <param name="threshold"></param>
            <param name="consecutivePositivesToReset"></param>
            <param name="consecutiveNegativesToTrigger"></param>
            <param name="lastCheck"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Crosscutting.EventAnalyzers.Searchers.SearchRealL10Meeting">
            <summary>
            Real Means it's not a preview...
            </summary>
        </member>
        <member name="P:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.FingerPrintFormat">
            <summary>
            A fingerprint format to apply to each job. The job arguments will be passed to
            this via String.Format to generate a unique name. If left null, the name
            will be automatically generated from the job class, method, and parameters.
            The format should resolve to something 88 chars or less or will be automatically
            truncated.
            </summary>
        </member>
        <member name="M:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.#ctor(System.Int32,System.String)">
            <summary>
            Debounce the background task, preventing it from being called until the end
            of the lockout period.
            </summary>
            <param name="seconds">The length of the lockout period in seconds.</param>
            <param name="resourceFormat"></param>
        </member>
        <member name="M:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.OnStateElection(Hangfire.States.ElectStateContext)">
            <summary>
            Hangfire filter event called when the action is transitioning from
            one state to another.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.OnPerformed(Hangfire.Server.PerformedContext)">
            <summary>
            Hangfire filter event called once the action has completed.
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.GetTimestamp(Hangfire.Storage.IStorageConnection,Hangfire.Common.Job)">
            <summary>
            Fetch the debounce starting timestamp.
            </summary>
            <param name="connection"></param>
            <param name="job"></param>
            <returns></returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.RemoveFingerPrint(Hangfire.Storage.IStorageConnection,Hangfire.Common.Job)">
            <summary>
            Remove the fingerprint for the job.
            </summary>
            <param name="connection"></param>
            <param name="job"></param>
        </member>
        <member name="M:RadialReview.Crosscutting.Hangfire.Debounce.DebounceAttribute.GetFingerPrint(Hangfire.Common.Job)">
            <summary>
            Build the fingerprint for the given job. The format is:
            {class}.{method}.{params}
            </summary>
            <param name="job"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Crosscutting.Hangfire.Jobs.HangfireJobUtility">
            <summary>
            Borrows code from Hangfire.RecurringJobExtensions 
            https://github.com/HangfireIO/Hangfire/blob/f87fd22e3661e05eb039fe45cb1aafb5b4c688b5/src/Hangfire.Core/RecurringJobExtensions.cs
            
            See also the constructor for Hangfire.RecurringJobEntity
            https://github.com/HangfireIO/Hangfire/blob/f87fd22e3661e05eb039fe45cb1aafb5b4c688b5/src/Hangfire.Core/RecurringJobEntity.cs
            
            </summary>
            
        </member>
        <member name="T:RadialReview.Crosscutting.Schedulers.Scheduler">
            <summary>
            Mock with using(Scheduler.Mock()) 
            Copied from BackgroundJob
            </summary>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule(System.Linq.Expressions.Expression{System.Action},System.TimeSpan)">
            <summary>
            Creates a new background job based on a specified method
            call expression and schedules it to be enqueued after a given delay.
            </summary>
            
            <param name="methodCall">Instance method call expression that will be marshalled to the Server.</param>
            <param name="delay">Delay, after which the job will be enqueued.</param>
            <returns>Unique identifier of the created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule(System.Linq.Expressions.Expression{System.Func{System.Threading.Tasks.Task}},System.TimeSpan)">
            <summary>
            Creates a new background job based on a specified method
            call expression and schedules it to be enqueued after a given delay.
            </summary>
            
            <param name="methodCall">Instance method call expression that will be marshalled to the Server.</param>
            <param name="delay">Delay, after which the job will be enqueued.</param>
            <returns>Unique identifier of the created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule(System.Linq.Expressions.Expression{System.Action},System.DateTimeOffset)">
            <summary>
            Creates a new background job based on a specified method call expression
            and schedules it to be enqueued at the given moment of time.
            </summary>
            
            <param name="methodCall">Method call expression that will be marshalled to the Server.</param>
            <param name="enqueueAt">The moment of time at which the job will be enqueued.</param>
            <returns>Unique identifier of a created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule(System.Linq.Expressions.Expression{System.Func{System.Threading.Tasks.Task}},System.DateTimeOffset)">
            <summary>
            Creates a new background job based on a specified method call expression
            and schedules it to be enqueued at the given moment of time.
            </summary>
            
            <param name="methodCall">Method call expression that will be marshalled to the Server.</param>
            <param name="enqueueAt">The moment of time at which the job will be enqueued.</param>
            <returns>Unique identifier of a created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule``1(System.Linq.Expressions.Expression{System.Action{``0}},System.TimeSpan)">
            <summary>
            Creates a new background job based on a specified instance method
            call expression and schedules it to be enqueued after a given delay.
            </summary>
            
            <typeparam name="T">Type whose method will be invoked during job processing.</typeparam>
            <param name="methodCall">Instance method call expression that will be marshalled to the Server.</param>
            <param name="delay">Delay, after which the job will be enqueued.</param>
            <returns>Unique identifier of the created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.TimeSpan)">
            <summary>
            Creates a new background job based on a specified instance method
            call expression and schedules it to be enqueued after a given delay.
            </summary>
            
            <typeparam name="T">Type whose method will be invoked during job processing.</typeparam>
            <param name="methodCall">Instance method call expression that will be marshalled to the Server.</param>
            <param name="delay">Delay, after which the job will be enqueued.</param>
            <returns>Unique identifier of the created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule``1(System.Linq.Expressions.Expression{System.Action{``0}},System.DateTimeOffset)">
            <summary>
            Creates a new background job based on a specified method call expression
            and schedules it to be enqueued at the given moment of time.
            </summary>
            
            <typeparam name="T">The type whose method will be invoked during the job processing.</typeparam>
            <param name="methodCall">Method call expression that will be marshalled to the Server.</param>
            <param name="enqueueAt">The moment of time at which the job will be enqueued.</param>
            <returns>Unique identifier of a created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Schedulers.Scheduler.Schedule``1(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.Tasks.Task}},System.DateTimeOffset)">
            <summary>
            Creates a new background job based on a specified method call expression
            and schedules it to be enqueued at the given moment of time.
            </summary>
            
            <typeparam name="T">The type whose method will be invoked during the job processing.</typeparam>
            <param name="methodCall">Method call expression that will be marshalled to the Server.</param>
            <param name="enqueueAt">The moment of time at which the job will be enqueued.</param>
            <returns>Unique identifier of a created job.</returns>
        </member>
        <member name="M:RadialReview.Crosscutting.Hooks.Interfaces.IMeetingModeHook.RevertL10Mode(NHibernate.ISession,System.Int64,RadialReview.Accessors.Mode,System.String)">
            <summary>
            Notice: I0f the mode is deleted or renamed, mode may be null.
            </summary>
            <param name="s"></param>
            <param name="recurrenceId"></param>
            <param name="mode"></param>
            <param name="modeName"></param>
            <returns></returns>
        </member>
        <member name="T:RadialReview.Hangfire.HangfireQueues.Immediate">
            <summary>
            Immediate fire jobs should update their queue. If we change the code, we do not want to run on the wrong verions
            </summary>
        </member>
        <member name="F:RadialReview.Hangfire.HangfireQueues.DEFAULT">
            <summary>
            I think we want it to run the jobs even if they are (incorrectly) unmarked
            </summary>
        </member>
        <member name="M:RadialReview.Repositories.RadialReviewRepository.GetNotificationsForUsers(System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            !! This needs to be made threadsafe
            </summary>
            <param name="userIds"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="F:RadialReview.Repositories.RadialReviewRepository._orgSettings">
            <summary>
            This organization settings object (_orgSettings) is shared and reused
            across all users within the same organization, ensuring consistency
            of settings at the organizational level and optimizing resource usage.
            </summary>
        </member>
        <member name="M:RadialReview.Models.Accountability.AccountabilityNode.SetUsers(System.Collections.Generic.List{RadialReview.Models.Accountability.AccountabilityNodeUserMap},System.Collections.Generic.List{RadialReview.Models.UserOrganizationModel})">
            <summary>
            Set users given node-user map (unpopulated), and users.
            </summary>
            <param name="accNodeUsers"></param>
            <param name="users"></param>
        </member>
        <member name="F:RadialReview.Models.Angular.Base.AngularListType.ReplaceIfNewer">
            <summary>
            Adds or replaces the entry
            </summary>
        </member>
        <member name="F:RadialReview.Models.Angular.Base.AngularListType.ReplaceIfExists">
            <summary>
            Replaces entry only if it exists
            </summary>
        </member>
        <member name="M:RadialReview.Models.OrganizationModel.GetTimezoneOffset">
            <summary>
            In minutes
            </summary>
            <returns></returns>
        </member>
        <member name="P:RadialReview.Models.Askables.RockModel.CompanyRock">
            RE-ADD to the map
        </member>
        <member name="M:RadialReview.Models.Attributes.IndexAttribute.#ctor(System.String,System.Boolean)">
            <summary>
              Initializes a new instance of the <see cref = "T:RadialReview.Models.Attributes.IndexAttribute"/> class.
              The index data annotation indicates that the database should contain an index
              on the associated property, either with or without a uniqueness constraint.
            </summary>
            <param name = "name">The index name, usually IX_{property}.</param>
            <param name = "unique">
              if set to <c>true</c> indicates that the index should have a uniqueness constraint.
            </param>
        </member>
        <member name="P:RadialReview.Models.Charts.ChartOptions.GroupBy">
            <summary>
            points are averaged that contain these classes
            
            "class1 class4 class5, class2, class3 class1"
            This will create 3 groups, 
                1) averages points that have class1 class4 and class5
                2) averages points that have class2
                3) averages points that have class3 and class1
                
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.ChartOptions.DimensionIds">
            <summary>
            dim1,dim-2,anotherDim
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.ChartOptions.Filters">
            <summary>
            Only include points that match a Filter
            
            "class1 class4 class5, class2, class3 class1"
            Shows 3 types of points,
                1) points that have class1 class4 and class5 or
                2) points that have class2 or
                3) points that have class3 and class1
            </summary>
        </member>
        <member name="T:RadialReview.Models.Charts.MetricGraphic">
            <summary>
            https://www.metricsgraphicsjs.org/examples.htm
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.format">
            <summary>
             'percentage'
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.decimals">
            <summary>
            display digits of precision
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.area">
            <summary>
            is an area chart
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.x_axis">
            <summary>
            Show or hide x axis
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.y_axis">
            <summary>
             Show or hide y axis
             </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.y_scale_type">
            <summary>
            'log'
            </summary>
        </member>
        <member name="P:RadialReview.Models.Charts.MetricGraphic.yax_units">
            <summary>
            '$'
            </summary>
        </member>
        <member name="M:RadialReview.Models.Components.ColorComponent.#ctor">
            <summary>
            Black
            </summary>
        </member>
        <member name="P:RadialReview.Models.Dashboard.Dashboard.PrimaryDashboard">
            <summary>
            The original workspace
            </summary>
        </member>
        <member name="T:RadialReview.Models.Documents.Interceptors.CoachClientFolderInterceptor">
            <summary>
            Not sure if we actually need this yet.
            </summary>
        </member>
        <member name="M:RadialReview.Models.Interfaces.IOrigin.GetOriginType">
            <summary>
            Organization,User,Application,Group
            </summary>
        </member>
        <member name="M:RadialReview.Models.Interfaces.IOrigin.GetSpecificNameForOrigin">
            <summary>
            Radial Review,Clay Upton,RadialWorks Inc, 
            </summary>
        </member>
        <member name="P:RadialReview.Models.L10.L10Meeting._MeetingMeasurables">
            <summary>
            Current meetings measurables. Needed in case meeting measurables change throughout time
            </summary>
        </member>
        <member name="P:RadialReview.Models.InvoiceModel._TaxLocation">
            <summary>
            Cache for the tax location. Not saved.
            </summary>
        </member>
        <member name="T:RadialReview.Models.PermItem.AccessType">
            <summary>
            NOTICE: Don't forget to add an IAccessorPermissions for new AccessType.
            All IAccessorPermissions are constructed and searched at runtime
            </summary>
        </member>
        <member name="T:RadialReview.Models.PermItem.ResourceType">
            <summary>
            NOTICE: Don't forget to add an IResourcePermissions for new ResourceTypes.
            All IResourcePermissions are constructed and searched at runtime
            </summary>
        </member>
        <member name="P:RadialReview.Models.PhoneActionMap.ForId">
            <summary>
            RecurrenceId
            </summary>
        </member>
        <member name="P:RadialReview.Models.Scorecard.MeasurableModel.BackReferenceMeasurables">
            <summary>
            When this one updates, also update these measurables...
            </summary>
        </member>
        <member name="P:RadialReview.Models.Synchronize.Sync.Timestamp">
            <summary>
            The client timestamp
            </summary>
        </member>
        <member name="F:RadialReview.Models.Timeline.TimelineLookup._lookup">
            <summary>
            ORDERING MATTERS FOR GetIconOrdering()
            </summary>
        </member>
        <member name="P:RadialReview.Models.Todo.TodoModel.CompleteTime">
            <summary>
            When did the todo get completed?
            </summary>
        </member>
        <member name="P:RadialReview.Models.Todo.TodoModel.CloseTime">
            <summary>
            When did the todo get closed out during a meeting
            </summary>
        </member>
        <member name="P:RadialReview.Models.ViewModels.WhaleViewModel.IframeSrc">
            <summary>
            Whale.io marketing Iframe source
            </summary>
        </member>
        <member name="T:RadialReview.HttpContextHelper">
            <summary>
            Temporary helper class for retrieving the current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> . This temporary
            workaround should be removed in the future and <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> should be retrieved
            from the current controller, middleware, or page instead.
            If working in another component, the current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> can be retrieved from an <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>
            retrieved via dependency injection.
            </summary>
        </member>
        <member name="P:RadialReview.HttpContextHelper.Current">
            <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>. Returns <c>null</c> if there is no current <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
        </member>
        <member name="M:RadialReview.Middleware.BackgroundServices.ParallelTaskExecutionService.BeginTaskAsync(RadialReview.Middleware.BackgroundServices.ParallelTaskExecutionService.Executable)">
            <summary>
            All variables from the outer scope must be fully resolved 
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:RadialReview.Middleware.Request.ModelBinders.DateTimeModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            https://stackoverflow.com/questions/528545/mvc-datetime-binding-with-incorrect-date-format
        </member>
        <member name="M:RadialReview.Middleware.Utilities.LowercaseInvariantLookupNormalizer.NormalizeEmail(System.String)">
            <summary>
            Returns a normalized representation of the specified <paramref name="email"/>.
            </summary>
            <param name="email">The email to normalize.</param>
            <returns>A normalized representation of the specified <paramref name="email"/>.</returns>
        </member>
        <member name="P:RadialReview.Notifications.Subscription.SubscriberId">
            <summary>
            Can be any RGM Id
            </summary>
        </member>
    </members>
</doc>
